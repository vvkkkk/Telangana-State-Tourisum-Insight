{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPQve/ma+kp3F7W/vZBVk/k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"NdZfwSCmGlbO","executionInfo":{"status":"ok","timestamp":1702964999419,"user_tz":480,"elapsed":840,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n"]},{"cell_type":"code","source":["domestic_visit = pd.read_csv('/content/domestic_visitors_2016.csv')\n","domestic_visit.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rRha5M4gHBaO","executionInfo":{"status":"ok","timestamp":1702964999956,"user_tz":480,"elapsed":35,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"f2ef1d02-8281-4a8e-9784-29db3c56089b"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   district      date     month  year visitors\n","0  Adilabad  1/1/2016   January  2016   792136\n","1  Adilabad  1/2/2016  February  2016   937820\n","2  Adilabad  1/3/2016     March  2016   582946\n","3  Adilabad  1/4/2016     April  2016   341948\n","4  Adilabad  1/5/2016       May  2016   252887"],"text/html":["\n","  <div id=\"df-c0494b7b-fc28-4180-9123-7de634532bf1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>date</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>visitors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>1/1/2016</td>\n","      <td>January</td>\n","      <td>2016</td>\n","      <td>792136</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Adilabad</td>\n","      <td>1/2/2016</td>\n","      <td>February</td>\n","      <td>2016</td>\n","      <td>937820</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Adilabad</td>\n","      <td>1/3/2016</td>\n","      <td>March</td>\n","      <td>2016</td>\n","      <td>582946</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Adilabad</td>\n","      <td>1/4/2016</td>\n","      <td>April</td>\n","      <td>2016</td>\n","      <td>341948</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Adilabad</td>\n","      <td>1/5/2016</td>\n","      <td>May</td>\n","      <td>2016</td>\n","      <td>252887</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0494b7b-fc28-4180-9123-7de634532bf1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c0494b7b-fc28-4180-9123-7de634532bf1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c0494b7b-fc28-4180-9123-7de634532bf1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5d92ce0-76ae-40b2-ab65-bfa8d1fa4510\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5d92ce0-76ae-40b2-ab65-bfa8d1fa4510')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5d92ce0-76ae-40b2-ab65-bfa8d1fa4510 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["foreign_visit = pd.read_csv('/content/foreign_visitors_2016.csv')\n"],"metadata":{"id":"hRYyjzx1DbNk","executionInfo":{"status":"ok","timestamp":1702964999957,"user_tz":480,"elapsed":29,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df_2017_f = pd.read_csv('/content/foreign_visitors_2017.csv')"],"metadata":{"id":"971FYmJLEAbd","executionInfo":{"status":"ok","timestamp":1702964999958,"user_tz":480,"elapsed":28,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df_2018_f = pd.read_csv('/content/foreign_visitors_2018.csv')"],"metadata":{"id":"NLGxQw2bEOEs","executionInfo":{"status":"ok","timestamp":1702964999959,"user_tz":480,"elapsed":28,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df_2019_f = pd.read_csv('/content/foreign_visitors_2019.csv')"],"metadata":{"id":"znaaDdSwEVo4","executionInfo":{"status":"ok","timestamp":1702964999959,"user_tz":480,"elapsed":27,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["foreign_visit = foreign_visit.append(df_2017_f)"],"metadata":{"id":"OLnAYuLVEe4L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702964999960,"user_tz":480,"elapsed":26,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"32cd414f-371d-4ed6-f4b8-454edce15085"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-5e15449048e2>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  foreign_visit = foreign_visit.append(df_2017_f)\n"]}]},{"cell_type":"code","source":["foreign_visit = foreign_visit.append(df_2018_f)"],"metadata":{"id":"DJS_iwmFE1D4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965000815,"user_tz":480,"elapsed":872,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"0f4ca979-0168-43c8-e695-d80d12c3c990"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-980c5ab116d1>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  foreign_visit = foreign_visit.append(df_2018_f)\n"]}]},{"cell_type":"code","source":["foreign_visit = foreign_visit.append(df_2019_f)"],"metadata":{"id":"HP_3M4cYFBR5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965000817,"user_tz":480,"elapsed":74,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"16b08438-fb42-4bdb-ae3e-4dc308fcc72e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-d625068bff35>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  foreign_visit = foreign_visit.append(df_2019_f)\n"]}]},{"cell_type":"code","source":["foreign_visit.shape"],"metadata":{"id":"wrwputmQFQTg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965000817,"user_tz":480,"elapsed":70,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"01b3a105-2e36-42b9-d4b2-8b078144a2d9"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1512, 5)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["domestic_visit.shape"],"metadata":{"id":"vwnIqWklHmRC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965000818,"user_tz":480,"elapsed":68,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"70248bc4-f706-49c0-ed50-c63a216e4823"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1512, 5)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["**Domestic data cleaning**"],"metadata":{"id":"AYjk48bgFktj"}},{"cell_type":"code","source":["domestic_visit.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P6eOqOPCI2lD","executionInfo":{"status":"ok","timestamp":1702965000819,"user_tz":480,"elapsed":66,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"229dacbd-1c85-44e0-8cc1-acf9aff1dc22"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1512 entries, 0 to 1511\n","Data columns (total 5 columns):\n"," #   Column    Non-Null Count  Dtype \n","---  ------    --------------  ----- \n"," 0   district  1512 non-null   object\n"," 1   date      1512 non-null   object\n"," 2   month     1512 non-null   object\n"," 3   year      1512 non-null   int64 \n"," 4   visitors  1482 non-null   object\n","dtypes: int64(1), object(4)\n","memory usage: 59.2+ KB\n"]}]},{"cell_type":"code","source":["domestic_visit.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zXF7vrdVI5UC","executionInfo":{"status":"ok","timestamp":1702965000819,"user_tz":480,"elapsed":63,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"497a01e5-fbec-425e-a542-8917f33c506b"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district     0\n","date         0\n","month        0\n","year         0\n","visitors    30\n","dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["domestic_visit.fillna(0,inplace=True)"],"metadata":{"id":"p6trmrDSJJBw","executionInfo":{"status":"ok","timestamp":1702965000820,"user_tz":480,"elapsed":62,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["domestic_visit.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"buW-fDiJGrLQ","executionInfo":{"status":"ok","timestamp":1702965000820,"user_tz":480,"elapsed":61,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"2306ab07-fbb1-4c0e-97c6-3d70dab41b1d"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district    0\n","date        0\n","month       0\n","year        0\n","visitors    0\n","dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["domestic_visit.replace([\" \",np.nan], 0, inplace=True)"],"metadata":{"id":"IMFUL3hLF-Bn","executionInfo":{"status":"ok","timestamp":1702965000821,"user_tz":480,"elapsed":60,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["domestic_visit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"OtNc-SpwGGSP","executionInfo":{"status":"ok","timestamp":1702965000822,"user_tz":480,"elapsed":60,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"f66555df-1ac1-4c81-df9b-23e9f4cf2394"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             district       date      month  year visitors\n","0            Adilabad   1/1/2016    January  2016   792136\n","1            Adilabad   1/2/2016   February  2016   937820\n","2            Adilabad   1/3/2016      March  2016   582946\n","3            Adilabad   1/4/2016      April  2016   341948\n","4            Adilabad   1/5/2016        May  2016   252887\n","...               ...        ...        ...   ...      ...\n","1507  Yadadri Bhongir   1/8/2019     August  2019   389010\n","1508  Yadadri Bhongir   1/9/2019  September  2019   366862\n","1509  Yadadri Bhongir  1/10/2019    October  2019   381860\n","1510  Yadadri Bhongir  1/11/2019   November  2019   365990\n","1511  Yadadri Bhongir  1/12/2019   December  2019   477635\n","\n","[1512 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-0b18ced5-5e13-4bb8-9e82-333a164f712d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>date</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>visitors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>1/1/2016</td>\n","      <td>January</td>\n","      <td>2016</td>\n","      <td>792136</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Adilabad</td>\n","      <td>1/2/2016</td>\n","      <td>February</td>\n","      <td>2016</td>\n","      <td>937820</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Adilabad</td>\n","      <td>1/3/2016</td>\n","      <td>March</td>\n","      <td>2016</td>\n","      <td>582946</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Adilabad</td>\n","      <td>1/4/2016</td>\n","      <td>April</td>\n","      <td>2016</td>\n","      <td>341948</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Adilabad</td>\n","      <td>1/5/2016</td>\n","      <td>May</td>\n","      <td>2016</td>\n","      <td>252887</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1507</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1/8/2019</td>\n","      <td>August</td>\n","      <td>2019</td>\n","      <td>389010</td>\n","    </tr>\n","    <tr>\n","      <th>1508</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1/9/2019</td>\n","      <td>September</td>\n","      <td>2019</td>\n","      <td>366862</td>\n","    </tr>\n","    <tr>\n","      <th>1509</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1/10/2019</td>\n","      <td>October</td>\n","      <td>2019</td>\n","      <td>381860</td>\n","    </tr>\n","    <tr>\n","      <th>1510</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1/11/2019</td>\n","      <td>November</td>\n","      <td>2019</td>\n","      <td>365990</td>\n","    </tr>\n","    <tr>\n","      <th>1511</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1/12/2019</td>\n","      <td>December</td>\n","      <td>2019</td>\n","      <td>477635</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1512 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b18ced5-5e13-4bb8-9e82-333a164f712d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b18ced5-5e13-4bb8-9e82-333a164f712d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b18ced5-5e13-4bb8-9e82-333a164f712d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-baca2385-5aac-44f4-8bc1-0f51c12e04a5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-baca2385-5aac-44f4-8bc1-0f51c12e04a5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-baca2385-5aac-44f4-8bc1-0f51c12e04a5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bfe6cd9e-1398-4ee9-80bc-527c63efc9e5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('domestic_visit')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bfe6cd9e-1398-4ee9-80bc-527c63efc9e5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('domestic_visit');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["domestic_visit.dtypes\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PvgrzB8aGQrr","executionInfo":{"status":"ok","timestamp":1702965000822,"user_tz":480,"elapsed":57,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"4d502d43-f726-46c2-d08e-0c2621a54a4e"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district    object\n","date        object\n","month       object\n","year         int64\n","visitors    object\n","dtype: object"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["domestic_visit[\"visitors\"] = domestic_visit.visitors.astype(\"int64\")"],"metadata":{"id":"8iAcGm3IGaw2","executionInfo":{"status":"ok","timestamp":1702965000823,"user_tz":480,"elapsed":55,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["domestic_visit = domestic_visit.drop_duplicates()"],"metadata":{"id":"97uvnqGyGhrD","executionInfo":{"status":"ok","timestamp":1702965000823,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":["**Foreign data cleaning**"],"metadata":{"id":"n1lMENfXFuSW"}},{"cell_type":"code","source":["foreign_visit.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pqfb-dl7Fz4q","executionInfo":{"status":"ok","timestamp":1702965000828,"user_tz":480,"elapsed":59,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"d2e4ffd7-03e3-4972-9639-8243c296094c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district    0\n","date        0\n","month       0\n","year        0\n","visitors    0\n","dtype: int64"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["foreign_visit['visitors'] = foreign_visit['visitors'].replace(\" \",0)"],"metadata":{"id":"tUseishgF4gS","executionInfo":{"status":"ok","timestamp":1702965000828,"user_tz":480,"elapsed":57,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["foreign_visit[\"visitors\"] = foreign_visit[\"visitors\"].astype(\"int64\")"],"metadata":{"id":"6NBl35QEcePv","executionInfo":{"status":"ok","timestamp":1702965000828,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame({'foreign_visit':foreign_visit.groupby('district')['visitors'].sum()})"],"metadata":{"id":"Ae3Gy9HOcqGS","executionInfo":{"status":"ok","timestamp":1702965000829,"user_tz":480,"elapsed":57,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df['domestic_visit']=domestic_visit.groupby(\"district\")[\"visitors\"].sum()"],"metadata":{"id":"2e5WRZbMdbUX","executionInfo":{"status":"ok","timestamp":1702965000829,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mH2xCNG3g8XW","executionInfo":{"status":"ok","timestamp":1702965000829,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"5be2ad27-2696-41c4-977f-988382440e31"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["foreign_visit     0\n","domestic_visit    1\n","dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["df['domestic_visit'] = df['domestic_visit'].replace(np.nan,0)"],"metadata":{"id":"Y3WV9EvzhDTk","executionInfo":{"status":"ok","timestamp":1702965000830,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["domestic_visit['visitors'] = pd.to_numeric(domestic_visit['visitors'], errors='coerce')  # 'coerce' will convert non-numeric values to NaN\n"],"metadata":{"id":"i-GYzF9EMFsa","executionInfo":{"status":"ok","timestamp":1702965000830,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["district_visitors = domestic_visit.groupby('district')['visitors'].sum()\n"],"metadata":{"id":"TQE20YQdJpHg","executionInfo":{"status":"ok","timestamp":1702965000830,"user_tz":480,"elapsed":53,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["domestic_visit.to_csv(\"domestic_visitors.csv\")"],"metadata":{"id":"yKNPha7hhV5S","executionInfo":{"status":"ok","timestamp":1702965000830,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["foreign_visit.to_csv(\"foreign_visitors.csv\")"],"metadata":{"id":"K9rU57q4higg","executionInfo":{"status":"ok","timestamp":1702965000831,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["domestic_visit.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghAFvI8AhvQc","executionInfo":{"status":"ok","timestamp":1702965000832,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"88eb141a-df0a-433a-f641-c3c1a843aa6c"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1512, 5)"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["Top 10 Distirct"],"metadata":{"id":"6_giIMnQh-eg"}},{"cell_type":"code","source":["combined = domestic_visit.append(foreign_visit)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9jdX14YfiFNX","executionInfo":{"status":"ok","timestamp":1702965000834,"user_tz":480,"elapsed":54,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"ce676a00-4c23-44aa-b05b-dad21faa9cd9"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-33-a7b6d342e639>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  combined = domestic_visit.append(foreign_visit)\n"]}]},{"cell_type":"code","source":["domestic_visit.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eN2BbIrwiYN2","executionInfo":{"status":"ok","timestamp":1702965000834,"user_tz":480,"elapsed":50,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"7d39eba4-ad38-45e8-bcf7-1691a5d9c6ae"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1512, 5)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["foreign_visit.shape"],"metadata":{"id":"uH_CFtYqidVL","executionInfo":{"status":"ok","timestamp":1702965000835,"user_tz":480,"elapsed":49,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"005f5b4d-8598-439c-e495-60696342c58b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1512, 5)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["top_10_districts = district_visitors.nlargest(10)\n"],"metadata":{"id":"Qt42GMnzNQop","executionInfo":{"status":"ok","timestamp":1702965000835,"user_tz":480,"elapsed":47,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["print(top_10_districts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6_DMqOK3MdiD","executionInfo":{"status":"ok","timestamp":1702965000836,"user_tz":480,"elapsed":47,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"06cc779f-5ef2-4400-ba92-75900476ea6b"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["district\n","Hyderabad                   83900960\n","Rajanna Sircilla            41763276\n","Warangal (Urban)            30726603\n","Yadadri Bhongir             26893080\n","Bhadradri Kothagudem        21600962\n","Medak                       20542639\n","Jayashankar Bhoopalpally    19632865\n","Mahbubnagar                 17180118\n","Nirmal                      13315796\n","Jagtial                     11303514\n","Name: visitors, dtype: int64\n"]}]},{"cell_type":"code","source":["top_10_districts_df = top_10_districts.reset_index()"],"metadata":{"id":"U8h6zRVpOvvb","executionInfo":{"status":"ok","timestamp":1702965000837,"user_tz":480,"elapsed":45,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["top_10_districts_df.columns = ['District', 'Total Visitors']"],"metadata":{"id":"vjLo6vphO_Vi","executionInfo":{"status":"ok","timestamp":1702965000838,"user_tz":480,"elapsed":46,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["top_10_districts_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"TJvy48cNPC0a","executionInfo":{"status":"ok","timestamp":1702965000838,"user_tz":480,"elapsed":45,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"bfd2aa4a-2b90-4f1a-bf78-8387879a28bc"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   District  Total Visitors\n","0                 Hyderabad        83900960\n","1         Rajanna Sircilla         41763276\n","2          Warangal (Urban)        30726603\n","3           Yadadri Bhongir        26893080\n","4     Bhadradri Kothagudem         21600962\n","5                    Medak         20542639\n","6  Jayashankar Bhoopalpally        19632865\n","7               Mahbubnagar        17180118\n","8                    Nirmal        13315796\n","9                  Jagtial         11303514"],"text/html":["\n","  <div id=\"df-3ee73653-7477-45a3-b352-6dc4cc808a68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>District</th>\n","      <th>Total Visitors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Hyderabad</td>\n","      <td>83900960</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajanna Sircilla</td>\n","      <td>41763276</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Warangal (Urban)</td>\n","      <td>30726603</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>26893080</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>21600962</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Medak</td>\n","      <td>20542639</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Jayashankar Bhoopalpally</td>\n","      <td>19632865</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mahbubnagar</td>\n","      <td>17180118</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Nirmal</td>\n","      <td>13315796</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Jagtial</td>\n","      <td>11303514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ee73653-7477-45a3-b352-6dc4cc808a68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ee73653-7477-45a3-b352-6dc4cc808a68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ee73653-7477-45a3-b352-6dc4cc808a68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a37ffb02-d581-4911-9702-4be4d73f9aaf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a37ffb02-d581-4911-9702-4be4d73f9aaf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a37ffb02-d581-4911-9702-4be4d73f9aaf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a3426fd1-dbb9-4648-9f2e-3c3584544109\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_10_districts_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a3426fd1-dbb9-4648-9f2e-3c3584544109 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_10_districts_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"nBE1uQmqPTej","executionInfo":{"status":"ok","timestamp":1702965001529,"user_tz":480,"elapsed":734,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["\n","\n","# Create the bar plot using Seaborn\n","plt.figure(figsize=(12, 6))\n","sns.barplot(x='Total Visitors', y='District', data=top_10_districts_df, orient='h')\n","plt.xlabel('Total Visitors')\n","plt.ylabel('District')\n","plt.title('Top 10 Districts with the Highest Number of Visitors')\n","\n","# Show the plot\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"Km37JZLEUH3D","executionInfo":{"status":"ok","timestamp":1702965002304,"user_tz":480,"elapsed":794,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"9292aca0-4afd-4d19-809e-f33e14267916"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["domestic_visit.groupby('district')['visitors'].sum().nsmallest(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6CUIzH9w8Ib4","executionInfo":{"status":"ok","timestamp":1702965003604,"user_tz":480,"elapsed":1306,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"c9de2cd3-2c22-4572-9efc-373ef65655ea"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district\n","Medchal                        0\n","Ranga Reddy                    0\n","Suryapet                       0\n","Vikarabad                      0\n","Kamareddy                   1773\n","Peddapalli                 56977\n","Komaram Bheem Asifabad     92734\n","Nizamabad                 116147\n","Narayanapet               389250\n","Mahabubabad               600697\n","Name: visitors, dtype: int64"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["domestic_visit.groupby('district')['visitors'].sum().sort_values(ascending=True).nsmallest(10).plot(kind='barh',title='Bottom top 10')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":469},"id":"TnN8Q05C8-2Y","executionInfo":{"status":"ok","timestamp":1702965003605,"user_tz":480,"elapsed":61,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"ea87a7b8-0a41-4bdb-c10a-e776816b0d87"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: title={'center': 'Bottom top 10'}, ylabel='district'>"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Domestic Top 3 CAGR**\n"],"metadata":{"id":"NIdFEdui9jj1"}},{"cell_type":"code","source":["pd.set_option('display.max_rows',None)\n"],"metadata":{"id":"36_FW2MR9yNy","executionInfo":{"status":"ok","timestamp":1702965003605,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["domestic_visit.groupby(['year','district'])['visitors'].sum()"],"metadata":{"id":"ajsg1z7i-JIL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965003606,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"e4cb9b1d-c6dc-400a-eb90-4af35d1a910b"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["year  district                \n","2016  Adilabad                     5075557\n","      Bhadradri Kothagudem          889030\n","      Hyderabad                   23394705\n","      Jagtial                       623077\n","      Jangaon                        40660\n","      Jayashankar Bhoopalpally      243400\n","      Jogulamba Gadwal              523401\n","      Kamareddy                        127\n","      Karimnagar                   9167468\n","      Khammam                      5005031\n","      Komaram Bheem Asifabad             0\n","      Mahabubabad                   140002\n","      Mahbubnagar                  8304766\n","      Mancherial                      7802\n","      Medak                        3463200\n","      Medchal                            0\n","      Nagarkurnool                  588473\n","      Nalgonda                     5858461\n","      Nirmal                        916610\n","      Nizamabad                       6442\n","      Peddapalli                      3244\n","      Rajanna Sircilla             2176801\n","      Ranga Reddy                        0\n","      Sangareddy                    778000\n","      Siddipet                      358400\n","      Suryapet                           0\n","      Vikarabad                          0\n","      Wanaparthy                     60138\n","      Warangal (Rural)               19400\n","      Warangal (Urban)            25788035\n","      Yadadri Bhongir              1728600\n","2017  Adilabad                      825380\n","      Bhadradri Kothagudem         4094317\n","      Hyderabad                   27160242\n","      Jagtial                      3641401\n","      Jangaon                       165708\n","      Jayashankar Bhoopalpally     1831010\n","      Jogulamba Gadwal             2245399\n","      Kamareddy                        540\n","      Karimnagar                    123976\n","      Khammam                      1542403\n","      Komaram Bheem Asifabad         50991\n","      Mahabubabad                   141815\n","      Mahbubnagar                  3488229\n","      Mancherial                    191626\n","      Medak                        7726869\n","      Medchal                            0\n","      Nagarkurnool                 2653645\n","      Nalgonda                      241916\n","      Nirmal                       4405083\n","      Nizamabad                      21949\n","      Peddapalli                     14898\n","      Rajanna Sircilla            11919347\n","      Ranga Reddy                        0\n","      Sangareddy                   2823450\n","      Siddipet                     1145721\n","      Suryapet                           0\n","      Vikarabad                          0\n","      Wanaparthy                    244701\n","      Warangal (Rural)              144250\n","      Warangal (Urban)             1420002\n","      Yadadri Bhongir              7001728\n","2018  Adilabad                      644743\n","      Bhadradri Kothagudem         3799878\n","      Hyderabad                   19543651\n","      Jagtial                      3952921\n","      Jangaon                       291022\n","      Jayashankar Bhoopalpally    16895925\n","      Jogulamba Gadwal             2036545\n","      Kamareddy                        572\n","      Karimnagar                     93448\n","      Khammam                      1417441\n","      Komaram Bheem Asifabad         22554\n","      Mahabubabad                   165995\n","      Mahbubnagar                  2852308\n","      Mancherial                    398004\n","      Medak                        3900000\n","      Medchal                            0\n","      Nagarkurnool                 2088925\n","      Nalgonda                      160638\n","      Nirmal                       4177325\n","      Nizamabad                      41423\n","      Peddapalli                     22254\n","      Rajanna Sircilla            10834231\n","      Ranga Reddy                        0\n","      Sangareddy                   2269900\n","      Siddipet                     1283300\n","      Suryapet                           0\n","      Vikarabad                          0\n","      Wanaparthy                    286600\n","      Warangal (Rural)              302012\n","      Warangal (Urban)             1723336\n","      Yadadri Bhongir             13673378\n","2019  Adilabad                      775895\n","      Bhadradri Kothagudem        12817737\n","      Hyderabad                   13802362\n","      Jagtial                      3086115\n","      Jangaon                       328890\n","      Jayashankar Bhoopalpally      662530\n","      Jogulamba Gadwal             2007995\n","      Kamareddy                        534\n","      Karimnagar                     77491\n","      Khammam                      1413440\n","      Komaram Bheem Asifabad         19189\n","      Mahabubabad                   152885\n","      Mahbubnagar                  2534815\n","      Mancherial                    269810\n","      Medak                        5452570\n","      Medchal                            0\n","      Mulugu                       1819800\n","      Nagarkurnool                 2093312\n","      Nalgonda                      140918\n","      Narayanapet                   389250\n","      Nirmal                       3816778\n","      Nizamabad                      46333\n","      Peddapalli                     16581\n","      Rajanna Sircilla            16832897\n","      Ranga Reddy                        0\n","      Sangareddy                   4553160\n","      Siddipet                     2987864\n","      Suryapet                           0\n","      Vikarabad                          0\n","      Wanaparthy                    298639\n","      Warangal (Rural)              353500\n","      Warangal (Urban)             1795230\n","      Yadadri Bhongir              4489374\n","Name: visitors, dtype: int64"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["districts = domestic_visit['district'].unique()\n","districts"],"metadata":{"id":"K1qjSCiq-v1L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702965003606,"user_tz":480,"elapsed":53,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"95955f02-5333-41c2-ad56-a2d51536d0e0"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Adilabad', 'Bhadradri Kothagudem ', 'Hyderabad', 'Jagtial ',\n","       'Jangaon ', 'Jayashankar Bhoopalpally', 'Jogulamba Gadwal ',\n","       'Kamareddy ', 'Karimnagar ', 'Khammam', 'Komaram Bheem Asifabad',\n","       'Mahabubabad ', 'Mahbubnagar', 'Mancherial', 'Medak ', 'Medchal ',\n","       'Nagarkurnool ', 'Nalgonda', 'Nirmal', 'Nizamabad', 'Peddapalli',\n","       'Rajanna Sircilla ', 'Ranga Reddy', 'Sangareddy ', 'Siddipet',\n","       'Suryapet', 'Vikarabad', 'Wanaparthy ', 'Warangal (Rural)',\n","       'Warangal (Urban)', 'Yadadri Bhongir', 'Mulugu', 'Narayanapet'],\n","      dtype=object)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["dom = pd.DataFrame({'district':districts})"],"metadata":{"id":"Y0LPwEj3-_ax","executionInfo":{"status":"ok","timestamp":1702965003606,"user_tz":480,"elapsed":43,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["domo_2016=[]\n","for i in districts:\n","  domestic_2016 = domestic_visit[domestic_visit[\"year\"]==2016]\n","  domo = domestic_2016[domestic_2016['district']==i].visitors.sum()\n","  domo_2016.append(domo)\n","dom[\"2016\"]=domo_2016\n"],"metadata":{"id":"a8Tfr6Ms_Tv-","executionInfo":{"status":"ok","timestamp":1702965003607,"user_tz":480,"elapsed":43,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["domo_2019=[]\n","for i in districts:\n","  domestic_2019 = domestic_visit[domestic_visit['year']==2019]\n","  domo = domestic_2019[domestic_2019['district']==i].visitors.sum()\n","  domo_2019.append(domo)\n","dom['2019']=domo_2019"],"metadata":{"id":"UtTKk-xcBx7U","executionInfo":{"status":"ok","timestamp":1702965003607,"user_tz":480,"elapsed":42,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["dom"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"u0WIiRShCe6r","executionInfo":{"status":"ok","timestamp":1702965003608,"user_tz":480,"elapsed":42,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"461c36ba-b333-4548-ca3b-1b81aa716078"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    district      2016      2019\n","0                   Adilabad   5075557    775895\n","1      Bhadradri Kothagudem     889030  12817737\n","2                  Hyderabad  23394705  13802362\n","3                   Jagtial     623077   3086115\n","4                   Jangaon      40660    328890\n","5   Jayashankar Bhoopalpally    243400    662530\n","6          Jogulamba Gadwal     523401   2007995\n","7                 Kamareddy        127       534\n","8                Karimnagar    9167468     77491\n","9                    Khammam   5005031   1413440\n","10    Komaram Bheem Asifabad         0     19189\n","11              Mahabubabad     140002    152885\n","12               Mahbubnagar   8304766   2534815\n","13                Mancherial      7802    269810\n","14                    Medak    3463200   5452570\n","15                  Medchal          0         0\n","16             Nagarkurnool     588473   2093312\n","17                  Nalgonda   5858461    140918\n","18                    Nirmal    916610   3816778\n","19                 Nizamabad      6442     46333\n","20                Peddapalli      3244     16581\n","21         Rajanna Sircilla    2176801  16832897\n","22               Ranga Reddy         0         0\n","23               Sangareddy     778000   4553160\n","24                  Siddipet    358400   2987864\n","25                  Suryapet         0         0\n","26                 Vikarabad         0         0\n","27               Wanaparthy      60138    298639\n","28          Warangal (Rural)     19400    353500\n","29          Warangal (Urban)  25788035   1795230\n","30           Yadadri Bhongir   1728600   4489374\n","31                    Mulugu         0   1819800\n","32               Narayanapet         0    389250"],"text/html":["\n","  <div id=\"df-25578610-4f50-487e-a9a7-ba36295f20e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>5075557</td>\n","      <td>775895</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>889030</td>\n","      <td>12817737</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>23394705</td>\n","      <td>13802362</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>623077</td>\n","      <td>3086115</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>40660</td>\n","      <td>328890</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Jayashankar Bhoopalpally</td>\n","      <td>243400</td>\n","      <td>662530</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Jogulamba Gadwal</td>\n","      <td>523401</td>\n","      <td>2007995</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Kamareddy</td>\n","      <td>127</td>\n","      <td>534</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Karimnagar</td>\n","      <td>9167468</td>\n","      <td>77491</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Khammam</td>\n","      <td>5005031</td>\n","      <td>1413440</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Komaram Bheem Asifabad</td>\n","      <td>0</td>\n","      <td>19189</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Mahabubabad</td>\n","      <td>140002</td>\n","      <td>152885</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Mahbubnagar</td>\n","      <td>8304766</td>\n","      <td>2534815</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Mancherial</td>\n","      <td>7802</td>\n","      <td>269810</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Medak</td>\n","      <td>3463200</td>\n","      <td>5452570</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Medchal</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Nagarkurnool</td>\n","      <td>588473</td>\n","      <td>2093312</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Nalgonda</td>\n","      <td>5858461</td>\n","      <td>140918</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Nirmal</td>\n","      <td>916610</td>\n","      <td>3816778</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Nizamabad</td>\n","      <td>6442</td>\n","      <td>46333</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Peddapalli</td>\n","      <td>3244</td>\n","      <td>16581</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Rajanna Sircilla</td>\n","      <td>2176801</td>\n","      <td>16832897</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Ranga Reddy</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Sangareddy</td>\n","      <td>778000</td>\n","      <td>4553160</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Siddipet</td>\n","      <td>358400</td>\n","      <td>2987864</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Suryapet</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Vikarabad</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Wanaparthy</td>\n","      <td>60138</td>\n","      <td>298639</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Warangal (Rural)</td>\n","      <td>19400</td>\n","      <td>353500</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Warangal (Urban)</td>\n","      <td>25788035</td>\n","      <td>1795230</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>1728600</td>\n","      <td>4489374</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Mulugu</td>\n","      <td>0</td>\n","      <td>1819800</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Narayanapet</td>\n","      <td>0</td>\n","      <td>389250</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25578610-4f50-487e-a9a7-ba36295f20e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-25578610-4f50-487e-a9a7-ba36295f20e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-25578610-4f50-487e-a9a7-ba36295f20e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-748dae2d-04d6-4547-9d90-f75da286765c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-748dae2d-04d6-4547-9d90-f75da286765c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-748dae2d-04d6-4547-9d90-f75da286765c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d64e7ecc-8a34-4a03-954b-ce0b717f7673\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dom')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d64e7ecc-8a34-4a03-954b-ce0b717f7673 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dom');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["cagr=[]\n","for i in range(len(districts)):\n","  fv=dom.loc[i,'2019']\n","  iv=dom.loc[i,'2016']\n","  cagrr = (((fv/iv)**(1/3))-1)\n","  cagr.append(cagrr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"47qoz_OID9Of","executionInfo":{"status":"ok","timestamp":1702965003608,"user_tz":480,"elapsed":40,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"6026d9d9-6761-4c38-e0d8-2fbaea613698"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-52-4e647e9ba0f1>:5: RuntimeWarning: divide by zero encountered in long_scalars\n","  cagrr = (((fv/iv)**(1/3))-1)\n","<ipython-input-52-4e647e9ba0f1>:5: RuntimeWarning: invalid value encountered in long_scalars\n","  cagrr = (((fv/iv)**(1/3))-1)\n"]}]},{"cell_type":"code","source":["dom['CAGR'] = cagr\n","dom = dom.replace([np.inf,np.nan],0)\n","dom.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8HUhT0WtE6BA","executionInfo":{"status":"ok","timestamp":1702965003609,"user_tz":480,"elapsed":38,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"d5e47480-64eb-4e47-c3d0-3df7d51b74a3"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                district      2016      2019      CAGR\n","0               Adilabad   5075557    775895 -0.465305\n","1  Bhadradri Kothagudem     889030  12817737  1.433875\n","2              Hyderabad  23394705  13802362 -0.161290\n","3               Jagtial     623077   3086115  0.704604\n","4               Jangaon      40660    328890  1.007372"],"text/html":["\n","  <div id=\"df-5d7e5723-2103-42f3-bde5-c7d6b59147b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>5075557</td>\n","      <td>775895</td>\n","      <td>-0.465305</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>889030</td>\n","      <td>12817737</td>\n","      <td>1.433875</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>23394705</td>\n","      <td>13802362</td>\n","      <td>-0.161290</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>623077</td>\n","      <td>3086115</td>\n","      <td>0.704604</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>40660</td>\n","      <td>328890</td>\n","      <td>1.007372</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d7e5723-2103-42f3-bde5-c7d6b59147b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5d7e5723-2103-42f3-bde5-c7d6b59147b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5d7e5723-2103-42f3-bde5-c7d6b59147b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f84dbf6e-11d9-4cb6-bb94-4b3d6072fc03\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f84dbf6e-11d9-4cb6-bb94-4b3d6072fc03')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f84dbf6e-11d9-4cb6-bb94-4b3d6072fc03 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["dom_max = dom.sort_values(by=\"CAGR\" , ascending=False).head(3)\n","dom_max = dom_max.reset_index()\n","dom_max.drop(\"index\",axis=1,inplace=True)"],"metadata":{"id":"c6GItIognuNj","executionInfo":{"status":"ok","timestamp":1702965003609,"user_tz":480,"elapsed":35,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["dom_max.head().plot(\"district\",\"CAGR\",kind=\"bar\")"],"metadata":{"id":"Y-K-yB7yoMua","colab":{"base_uri":"https://localhost:8080/","height":618},"executionInfo":{"status":"ok","timestamp":1702965003609,"user_tz":480,"elapsed":35,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"c0b7585f-48e8-4880-db5a-7a0a3e19edc8"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":55},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dom_min = dom.sort_values(by=\"CAGR\",ascending=True).head(3)\n","dom_min = dom_min.reset_index()\n","dom_min.drop(\"index\",axis=1,inplace=True)"],"metadata":{"id":"pkHIISOqohhH","executionInfo":{"status":"ok","timestamp":1702965003610,"user_tz":480,"elapsed":29,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["dom_min.head().plot(\"district\",\"CAGR\",kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"tJk6upyIpKGD","executionInfo":{"status":"ok","timestamp":1702965004869,"user_tz":480,"elapsed":1288,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"3496caed-1ea8-49d9-c7e2-d90c6488ecd1"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":57},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# prompt: list down the bottom 3 districts based on compounded annual growth  rate (CAGR) of visitors between (2016-2019)?\n","\n","dom_min = dom.sort_values(by=\"CAGR\",ascending=True).head(3)\n","dom_min = dom_min.reset_index()\n","dom_min.drop(\"index\",axis=1,inplace=True)\n","dom_min.head()\n"],"metadata":{"id":"9zRdaxPuptcN","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1702965004869,"user_tz":480,"elapsed":156,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"9612824d-6a93-43c8-c07e-e28b90b0fdd4"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           district      2016     2019      CAGR\n","0       Karimnagar    9167468    77491 -0.796296\n","1          Nalgonda   5858461   140918 -0.711335\n","2  Warangal (Urban)  25788035  1795230 -0.588629"],"text/html":["\n","  <div id=\"df-d60a96cd-e325-4f4d-b0c5-1d9612bcd6ec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Karimnagar</td>\n","      <td>9167468</td>\n","      <td>77491</td>\n","      <td>-0.796296</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Nalgonda</td>\n","      <td>5858461</td>\n","      <td>140918</td>\n","      <td>-0.711335</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Warangal (Urban)</td>\n","      <td>25788035</td>\n","      <td>1795230</td>\n","      <td>-0.588629</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d60a96cd-e325-4f4d-b0c5-1d9612bcd6ec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d60a96cd-e325-4f4d-b0c5-1d9612bcd6ec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d60a96cd-e325-4f4d-b0c5-1d9612bcd6ec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c2aa0b08-8247-40e3-8b67-35346ac3f954\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2aa0b08-8247-40e3-8b67-35346ac3f954')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c2aa0b08-8247-40e3-8b67-35346ac3f954 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["dom_min.head().plot(\"district\",\"CAGR\",kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"Va7YlGHVwQra","executionInfo":{"status":"ok","timestamp":1702965004870,"user_tz":480,"elapsed":148,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"45166027-1e6e-4217-82f3-d04d7f77adea"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":59},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**2. Foreign top_3 CAGR**\n"],"metadata":{"id":"KgN1-hzDwhCs"}},{"cell_type":"code","source":["foreign_visit.groupby([\"year\",\"district\"])[\"visitors\"].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8vNbNbqiwrlf","executionInfo":{"status":"ok","timestamp":1702965004871,"user_tz":480,"elapsed":141,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"87f7585c-d464-449f-d4c0-b2d0eeb540b8"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["year  district                \n","2016  Adilabad                        10\n","      Bhadradri Kothagudem             0\n","      Hyderabad                   163631\n","      Jagtial                          0\n","      Jangaon                          2\n","      Jayashankar Bhoopalpally        86\n","      Jogulamba Gadwal                45\n","      Kamareddy                        0\n","      Karimnagar                       0\n","      Khammam                          0\n","      Komaram Bheem Asifabad           0\n","      Mahabubabad                      0\n","      Mahbubnagar                    868\n","      Mancherial                       0\n","      Medak                            0\n","      Medchal                          0\n","      Nagarkurnool                    29\n","      Nalgonda                         0\n","      Nirmal                           0\n","      Nizamabad                        0\n","      Peddapalli                       0\n","      Rajanna Sircilla                 0\n","      Ranga Reddy                      0\n","      Sangareddy                       0\n","      Siddipet                         0\n","      Suryapet                         0\n","      Vikarabad                        0\n","      Wanaparthy                       0\n","      Warangal (Rural)                 0\n","      Warangal (Urban)              1899\n","      Yadadri Bhongir                  0\n","2017  Adilabad                        11\n","      Bhadradri Kothagudem             0\n","      Hyderabad                   247179\n","      Jagtial                          0\n","      Jangaon                          0\n","      Jayashankar Bhoopalpally       582\n","      Jogulamba Gadwal               305\n","      Kamareddy                        0\n","      Karimnagar                       0\n","      Khammam                          0\n","      Komaram Bheem Asifabad           0\n","      Mahabubabad                      0\n","      Mahbubnagar                    520\n","      Mancherial                       0\n","      Medak                            0\n","      Medchal                          0\n","      Nagarkurnool                   311\n","      Nalgonda                         0\n","      Nirmal                           0\n","      Nizamabad                        2\n","      Peddapalli                       0\n","      Rajanna Sircilla                 0\n","      Ranga Reddy                      0\n","      Sangareddy                       0\n","      Siddipet                         0\n","      Suryapet                         0\n","      Vikarabad                        0\n","      Wanaparthy                       0\n","      Warangal (Rural)               306\n","      Warangal (Urban)              2630\n","      Yadadri Bhongir                  0\n","2018  Adilabad                         5\n","      Bhadradri Kothagudem             0\n","      Hyderabad                   314788\n","      Jagtial                          0\n","      Jangaon                          0\n","      Jayashankar Bhoopalpally       539\n","      Jogulamba Gadwal               300\n","      Kamareddy                        0\n","      Karimnagar                       0\n","      Khammam                          0\n","      Komaram Bheem Asifabad           0\n","      Mahabubabad                      0\n","      Mahbubnagar                    454\n","      Mancherial                       0\n","      Medak                            0\n","      Medchal                          0\n","      Nagarkurnool                   222\n","      Nalgonda                         0\n","      Nirmal                           2\n","      Nizamabad                        2\n","      Peddapalli                       0\n","      Rajanna Sircilla                 0\n","      Ranga Reddy                      0\n","      Sangareddy                       0\n","      Siddipet                         0\n","      Suryapet                         0\n","      Vikarabad                        0\n","      Wanaparthy                       0\n","      Warangal (Rural)                 0\n","      Warangal (Urban)              1842\n","      Yadadri Bhongir                  0\n","2019  Adilabad                         6\n","      Bhadradri Kothagudem             0\n","      Hyderabad                   319300\n","      Jagtial                          0\n","      Jangaon                          0\n","      Jayashankar Bhoopalpally        45\n","      Jogulamba Gadwal               295\n","      Kamareddy                        0\n","      Karimnagar                       0\n","      Khammam                          0\n","      Komaram Bheem Asifabad           0\n","      Mahabubabad                      0\n","      Mahbubnagar                    440\n","      Mancherial                      10\n","      Medak                            0\n","      Medchal                          0\n","      Mulugu                         575\n","      Nagarkurnool                   199\n","      Nalgonda                         0\n","      Narayanpet                       5\n","      Nirmal                           0\n","      Nizamabad                        1\n","      Peddapalli                       0\n","      Rajanna Sircilla                 0\n","      Ranga Reddy                      0\n","      Sangareddy                       0\n","      Siddipet                         0\n","      Suryapet                         0\n","      Vikarabad                        0\n","      Wanaparthy                       0\n","      Warangal (Rural)                 0\n","      Warangal (Urban)              2450\n","      Yadadri Bhongir                  0\n","Name: visitors, dtype: int64"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["fore = pd.DataFrame({\"district\":districts})"],"metadata":{"id":"cX_AjWjsxIhw","executionInfo":{"status":"ok","timestamp":1702965004876,"user_tz":480,"elapsed":141,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["domo_2016=[]\n","for i in districts:\n","  domestic_2016 = foreign_visit[foreign_visit[\"year\"]==2016]\n","  domo = domestic_2016[domestic_2016[\"district\"]==i].visitors.sum()\n","  domo_2016.append(domo)\n","fore[\"2016\"]=domo_2016"],"metadata":{"id":"RoxHgd08yvJx","executionInfo":{"status":"ok","timestamp":1702965004879,"user_tz":480,"elapsed":143,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["domo_2019=[]\n","for i in districts:\n","  domestic_2019 = foreign_visit[foreign_visit[\"year\"]==2019]\n","  domo = domestic_2019[domestic_2019[\"district\"]==i].visitors.sum()\n","  domo_2019.append(domo)\n","fore[\"2019\"]=domo_2019"],"metadata":{"id":"q3vA4fHBSV0l","executionInfo":{"status":"ok","timestamp":1702965004881,"user_tz":480,"elapsed":145,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["fore.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_7eQOlp3V4kC","executionInfo":{"status":"ok","timestamp":1702965004881,"user_tz":480,"elapsed":144,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"09075106-f009-4ee4-c49b-3bb8e18f27e4"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                district    2016    2019\n","0               Adilabad      10       6\n","1  Bhadradri Kothagudem        0       0\n","2              Hyderabad  163631  319300\n","3               Jagtial        0       0\n","4               Jangaon        2       0"],"text/html":["\n","  <div id=\"df-8fd4c92f-6806-4c96-ba84-6546922939dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>10</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>163631</td>\n","      <td>319300</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fd4c92f-6806-4c96-ba84-6546922939dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8fd4c92f-6806-4c96-ba84-6546922939dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8fd4c92f-6806-4c96-ba84-6546922939dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c341e46a-cf2b-461a-938d-47d779b6a485\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c341e46a-cf2b-461a-938d-47d779b6a485')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c341e46a-cf2b-461a-938d-47d779b6a485 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["cagr=[]\n","for i in range(len(districts)):\n","  fv= fore.loc[i,'2019']\n","  iv= fore.loc[i,'2016']\n","  cagrr = (((fv/iv)**(1/3))-1)\n","  cagr.append(cagrr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eE_-Ql8JWK-e","executionInfo":{"status":"ok","timestamp":1702965004882,"user_tz":480,"elapsed":143,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"097f8404-f738-46da-f6dc-58dc04a9a7bf"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-65-8d69102c9ab1>:5: RuntimeWarning: invalid value encountered in long_scalars\n","  cagrr = (((fv/iv)**(1/3))-1)\n","<ipython-input-65-8d69102c9ab1>:5: RuntimeWarning: divide by zero encountered in long_scalars\n","  cagrr = (((fv/iv)**(1/3))-1)\n"]}]},{"cell_type":"code","source":["fore['CAGR']=cagr\n"],"metadata":{"id":"AYd2lBR-WxcI","executionInfo":{"status":"ok","timestamp":1702965004882,"user_tz":480,"elapsed":102,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["fore.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GpPECJGyW53n","executionInfo":{"status":"ok","timestamp":1702965004883,"user_tz":480,"elapsed":100,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"41bde24e-e71a-47f5-ecdf-865b28207015"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                district    2016    2019      CAGR\n","0               Adilabad      10       6 -0.156567\n","1  Bhadradri Kothagudem        0       0       NaN\n","2              Hyderabad  163631  319300  0.249619\n","3               Jagtial        0       0       NaN\n","4               Jangaon        2       0 -1.000000"],"text/html":["\n","  <div id=\"df-f9ece34c-d2d6-429a-a143-a5ab730087a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>-0.156567</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>163631</td>\n","      <td>319300</td>\n","      <td>0.249619</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9ece34c-d2d6-429a-a143-a5ab730087a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9ece34c-d2d6-429a-a143-a5ab730087a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9ece34c-d2d6-429a-a143-a5ab730087a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da519286-b44d-44ca-b956-74279b043d81\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da519286-b44d-44ca-b956-74279b043d81')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da519286-b44d-44ca-b956-74279b043d81 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["fore.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7QiwZT8hW9jG","executionInfo":{"status":"ok","timestamp":1702965004883,"user_tz":480,"elapsed":98,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"c3239bd8-9ce3-4f14-f07c-2c38edc954fa"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["district     0\n","2016         0\n","2019         0\n","CAGR        22\n","dtype: int64"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["fore = fore.replace([np.inf,np.nan],0)"],"metadata":{"id":"1utLtuEAXDy4","executionInfo":{"status":"ok","timestamp":1702965004884,"user_tz":480,"elapsed":94,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["fore.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"uSQbMmJ_XMWG","executionInfo":{"status":"ok","timestamp":1702965004885,"user_tz":480,"elapsed":94,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"eeb5c747-b711-4d4b-9420-43c77f7b461a"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                district    2016    2019      CAGR\n","0               Adilabad      10       6 -0.156567\n","1  Bhadradri Kothagudem        0       0  0.000000\n","2              Hyderabad  163631  319300  0.249619\n","3               Jagtial        0       0  0.000000\n","4               Jangaon        2       0 -1.000000"],"text/html":["\n","  <div id=\"df-50d798eb-6d4b-463e-89df-b274f8d3ef4c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>-0.156567</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>163631</td>\n","      <td>319300</td>\n","      <td>0.249619</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50d798eb-6d4b-463e-89df-b274f8d3ef4c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50d798eb-6d4b-463e-89df-b274f8d3ef4c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50d798eb-6d4b-463e-89df-b274f8d3ef4c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84cbe426-8a4b-483b-8b45-e0257d7f158e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84cbe426-8a4b-483b-8b45-e0257d7f158e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84cbe426-8a4b-483b-8b45-e0257d7f158e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["fore.sort_values(by=\"CAGR\",ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BGiceTP2XXlS","executionInfo":{"status":"ok","timestamp":1702965004886,"user_tz":480,"elapsed":92,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"71e3ecda-8d2d-442e-d11b-4b911c4eedfa"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    district    2016    2019      CAGR\n","16             Nagarkurnool       29     199  0.900283\n","6          Jogulamba Gadwal       45     295  0.871557\n","2                  Hyderabad  163631  319300  0.249619\n","29          Warangal (Urban)    1899    2450  0.088630\n","25                  Suryapet       0       0  0.000000\n","20                Peddapalli       0       0  0.000000\n","21         Rajanna Sircilla        0       0  0.000000\n","22               Ranga Reddy       0       0  0.000000\n","23               Sangareddy        0       0  0.000000\n","24                  Siddipet       0       0  0.000000\n","27               Wanaparthy        0       0  0.000000\n","26                 Vikarabad       0       0  0.000000\n","18                    Nirmal       0       0  0.000000\n","28          Warangal (Rural)       0       0  0.000000\n","30           Yadadri Bhongir       0       0  0.000000\n","31                    Mulugu       0     575  0.000000\n","19                 Nizamabad       0       1  0.000000\n","32               Narayanapet       0       0  0.000000\n","17                  Nalgonda       0       0  0.000000\n","1      Bhadradri Kothagudem        0       0  0.000000\n","15                  Medchal        0       0  0.000000\n","14                    Medak        0       0  0.000000\n","13                Mancherial       0      10  0.000000\n","11              Mahabubabad        0       0  0.000000\n","10    Komaram Bheem Asifabad       0       0  0.000000\n","9                    Khammam       0       0  0.000000\n","8                Karimnagar        0       0  0.000000\n","7                 Kamareddy        0       0  0.000000\n","3                   Jagtial        0       0  0.000000\n","0                   Adilabad      10       6 -0.156567\n","5   Jayashankar Bhoopalpally      86      45 -0.194180\n","12               Mahbubnagar     868     440 -0.202659\n","4                   Jangaon        2       0 -1.000000"],"text/html":["\n","  <div id=\"df-c0cb02c5-5c45-4292-8a54-bc71e2351de3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16</th>\n","      <td>Nagarkurnool</td>\n","      <td>29</td>\n","      <td>199</td>\n","      <td>0.900283</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Jogulamba Gadwal</td>\n","      <td>45</td>\n","      <td>295</td>\n","      <td>0.871557</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>163631</td>\n","      <td>319300</td>\n","      <td>0.249619</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Warangal (Urban)</td>\n","      <td>1899</td>\n","      <td>2450</td>\n","      <td>0.088630</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Suryapet</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Peddapalli</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Rajanna Sircilla</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Ranga Reddy</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Sangareddy</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Siddipet</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Wanaparthy</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Vikarabad</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Nirmal</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Warangal (Rural)</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Yadadri Bhongir</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Mulugu</td>\n","      <td>0</td>\n","      <td>575</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Nizamabad</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Narayanapet</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Nalgonda</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bhadradri Kothagudem</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Medchal</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Medak</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Mancherial</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Mahabubabad</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Komaram Bheem Asifabad</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Khammam</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Karimnagar</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Kamareddy</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Jagtial</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Adilabad</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>-0.156567</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Jayashankar Bhoopalpally</td>\n","      <td>86</td>\n","      <td>45</td>\n","      <td>-0.194180</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Mahbubnagar</td>\n","      <td>868</td>\n","      <td>440</td>\n","      <td>-0.202659</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jangaon</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0cb02c5-5c45-4292-8a54-bc71e2351de3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c0cb02c5-5c45-4292-8a54-bc71e2351de3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c0cb02c5-5c45-4292-8a54-bc71e2351de3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3905b836-1a12-483c-83f4-775d5b4edef6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3905b836-1a12-483c-83f4-775d5b4edef6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3905b836-1a12-483c-83f4-775d5b4edef6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["fore_max = fore.sort_values(by=\"CAGR\",ascending=False).head(3)\n","fore_max = fore_max.reset_index()\n","fore_max.drop(\"index\",axis=1,inplace=True)\n","fore_max"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"9FDXkJAKXrE_","executionInfo":{"status":"ok","timestamp":1702965004886,"user_tz":480,"elapsed":88,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"334de946-ceed-4c3a-c486-5f45b9e73b1a"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            district    2016    2019      CAGR\n","0      Nagarkurnool       29     199  0.900283\n","1  Jogulamba Gadwal       45     295  0.871557\n","2          Hyderabad  163631  319300  0.249619"],"text/html":["\n","  <div id=\"df-0c9075e6-dcb8-4aae-80c1-53e0dd2e94b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Nagarkurnool</td>\n","      <td>29</td>\n","      <td>199</td>\n","      <td>0.900283</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Jogulamba Gadwal</td>\n","      <td>45</td>\n","      <td>295</td>\n","      <td>0.871557</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hyderabad</td>\n","      <td>163631</td>\n","      <td>319300</td>\n","      <td>0.249619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c9075e6-dcb8-4aae-80c1-53e0dd2e94b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c9075e6-dcb8-4aae-80c1-53e0dd2e94b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c9075e6-dcb8-4aae-80c1-53e0dd2e94b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-78cf1eb7-7f2d-463d-8bb3-202db1ee9c90\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78cf1eb7-7f2d-463d-8bb3-202db1ee9c90')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-78cf1eb7-7f2d-463d-8bb3-202db1ee9c90 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d6cd7dd1-920a-4e4c-bac0-9571c15d5768\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('fore_max')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d6cd7dd1-920a-4e4c-bac0-9571c15d5768 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('fore_max');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["fore_max.plot(\"district\",\"CAGR\",kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":587},"id":"Mhi3vYxBYM_A","executionInfo":{"status":"ok","timestamp":1702965004887,"user_tz":480,"elapsed":87,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"41a57290-a175-482c-d86b-f206593d2c20"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["fore_min = fore.sort_values(by=\"CAGR\",ascending=True).head(3)\n","fore_min = fore_min.reset_index()\n","fore_min.drop(\"index\",axis=1,inplace=True)\n","fore_min"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"rcAhdFhYYtYc","executionInfo":{"status":"ok","timestamp":1702965004887,"user_tz":480,"elapsed":78,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"aefe355b-8cd8-4a74-dd01-47a423f015c5"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   district  2016  2019      CAGR\n","0                  Jangaon      2     0 -1.000000\n","1               Mahbubnagar   868   440 -0.202659\n","2  Jayashankar Bhoopalpally    86    45 -0.194180"],"text/html":["\n","  <div id=\"df-d7a6aa89-efd0-47f2-b8e6-27e14000f3c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Jangaon</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Mahbubnagar</td>\n","      <td>868</td>\n","      <td>440</td>\n","      <td>-0.202659</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jayashankar Bhoopalpally</td>\n","      <td>86</td>\n","      <td>45</td>\n","      <td>-0.194180</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7a6aa89-efd0-47f2-b8e6-27e14000f3c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7a6aa89-efd0-47f2-b8e6-27e14000f3c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7a6aa89-efd0-47f2-b8e6-27e14000f3c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b1a81a1-8156-45dd-9cb6-f0f7fcb93809\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b1a81a1-8156-45dd-9cb6-f0f7fcb93809')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b1a81a1-8156-45dd-9cb6-f0f7fcb93809 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6201cce9-397a-44f8-acc9-6cfad69e7f11\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('fore_min')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6201cce9-397a-44f8-acc9-6cfad69e7f11 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('fore_min');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["fore_min.plot(\"district\",\"CAGR\",kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"id":"1z1NKakNY_ww","executionInfo":{"status":"ok","timestamp":1702965005957,"user_tz":480,"elapsed":1144,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"a129359e-ea4f-4a5d-ea0f-2bf17340b6ba"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":75},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["fore.to_csv(\"foreign_cagr.csv\")"],"metadata":{"id":"Cd27TOHXZOQz","executionInfo":{"status":"ok","timestamp":1702965005958,"user_tz":480,"elapsed":74,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":76,"outputs":[]},{"cell_type":"markdown","source":["**4. Peak Months**"],"metadata":{"id":"9VE45rXqZsxs"}},{"cell_type":"code","source":["dom_hyd = domestic_visit[domestic_visit['district']== 'Hyderabad']\n","dom_hyd\n"],"metadata":{"id":"aKp31gdsZ04q","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1702965005958,"user_tz":480,"elapsed":74,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"0c93dba8-d542-4152-84b0-d15de7838069"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       district       date      month  year  visitors\n","24    Hyderabad   1/1/2016    January  2016   1122510\n","25    Hyderabad   1/2/2016   February  2016    778748\n","26    Hyderabad   1/3/2016      March  2016   1017794\n","27    Hyderabad   1/4/2016      April  2016   1127738\n","28    Hyderabad   1/5/2016        May  2016   1287181\n","29    Hyderabad   1/6/2016       June  2016  12032661\n","30    Hyderabad   1/7/2016       July  2016   1096754\n","31    Hyderabad   1/8/2016     August  2016   1061137\n","32    Hyderabad   1/9/2016  September  2016    832987\n","33    Hyderabad  1/10/2016    October  2016    901960\n","34    Hyderabad  1/11/2016   November  2016    909733\n","35    Hyderabad  1/12/2016   December  2016   1225502\n","396   Hyderabad   1/1/2017    January  2017   1924695\n","397   Hyderabad   1/2/2017   February  2017   1886698\n","398   Hyderabad   1/3/2017      March  2017   1783903\n","399   Hyderabad   1/4/2017      April  2017   2366793\n","400   Hyderabad   1/5/2017        May  2017   2266793\n","401   Hyderabad   1/6/2017       June  2017   2007060\n","402   Hyderabad   1/7/2017       July  2017   1890870\n","403   Hyderabad   1/8/2017     August  2017   1976980\n","404   Hyderabad   1/9/2017  September  2017   2011280\n","405   Hyderabad  1/10/2017    October  2017   2202316\n","406   Hyderabad  1/11/2017   November  2017   1971438\n","407   Hyderabad  1/12/2017   December  2017   4871416\n","768   Hyderabad   1/1/2018    January  2018   1978396\n","769   Hyderabad   1/2/2018   February  2018   1365837\n","770   Hyderabad   1/3/2018      March  2018   1415938\n","771   Hyderabad   1/4/2018      April  2018   1586375\n","772   Hyderabad   1/5/2018        May  2018   1189492\n","773   Hyderabad   1/6/2018       June  2018   1595067\n","774   Hyderabad   1/7/2018       July  2018   1470042\n","775   Hyderabad   1/8/2018     August  2018   1591470\n","776   Hyderabad   1/9/2018  September  2018   1508086\n","777   Hyderabad  1/10/2018    October  2018   2207478\n","778   Hyderabad  1/11/2018   November  2018   1671320\n","779   Hyderabad  1/12/2018   December  2018   1964150\n","1140  Hyderabad   1/1/2019    January  2019   1426500\n","1141  Hyderabad   1/2/2019   February  2019    983147\n","1142  Hyderabad   1/3/2019      March  2019   1009991\n","1143  Hyderabad   1/4/2019      April  2019   1045933\n","1144  Hyderabad   1/5/2019        May  2019   1305748\n","1145  Hyderabad   1/6/2019       June  2019   1262995\n","1146  Hyderabad   1/7/2019       July  2019   1094861\n","1147  Hyderabad   1/8/2019     August  2019   1121380\n","1148  Hyderabad   1/9/2019  September  2019    959930\n","1149  Hyderabad  1/10/2019    October  2019   1240643\n","1150  Hyderabad  1/11/2019   November  2019   1073665\n","1151  Hyderabad  1/12/2019   December  2019   1277569"],"text/html":["\n","  <div id=\"df-a199099c-a125-42f2-b799-a487a6e96f6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>date</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>visitors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>Hyderabad</td>\n","      <td>1/1/2016</td>\n","      <td>January</td>\n","      <td>2016</td>\n","      <td>1122510</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Hyderabad</td>\n","      <td>1/2/2016</td>\n","      <td>February</td>\n","      <td>2016</td>\n","      <td>778748</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Hyderabad</td>\n","      <td>1/3/2016</td>\n","      <td>March</td>\n","      <td>2016</td>\n","      <td>1017794</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Hyderabad</td>\n","      <td>1/4/2016</td>\n","      <td>April</td>\n","      <td>2016</td>\n","      <td>1127738</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Hyderabad</td>\n","      <td>1/5/2016</td>\n","      <td>May</td>\n","      <td>2016</td>\n","      <td>1287181</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Hyderabad</td>\n","      <td>1/6/2016</td>\n","      <td>June</td>\n","      <td>2016</td>\n","      <td>12032661</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Hyderabad</td>\n","      <td>1/7/2016</td>\n","      <td>July</td>\n","      <td>2016</td>\n","      <td>1096754</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Hyderabad</td>\n","      <td>1/8/2016</td>\n","      <td>August</td>\n","      <td>2016</td>\n","      <td>1061137</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Hyderabad</td>\n","      <td>1/9/2016</td>\n","      <td>September</td>\n","      <td>2016</td>\n","      <td>832987</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Hyderabad</td>\n","      <td>1/10/2016</td>\n","      <td>October</td>\n","      <td>2016</td>\n","      <td>901960</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Hyderabad</td>\n","      <td>1/11/2016</td>\n","      <td>November</td>\n","      <td>2016</td>\n","      <td>909733</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Hyderabad</td>\n","      <td>1/12/2016</td>\n","      <td>December</td>\n","      <td>2016</td>\n","      <td>1225502</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>Hyderabad</td>\n","      <td>1/1/2017</td>\n","      <td>January</td>\n","      <td>2017</td>\n","      <td>1924695</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>Hyderabad</td>\n","      <td>1/2/2017</td>\n","      <td>February</td>\n","      <td>2017</td>\n","      <td>1886698</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>Hyderabad</td>\n","      <td>1/3/2017</td>\n","      <td>March</td>\n","      <td>2017</td>\n","      <td>1783903</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>Hyderabad</td>\n","      <td>1/4/2017</td>\n","      <td>April</td>\n","      <td>2017</td>\n","      <td>2366793</td>\n","    </tr>\n","    <tr>\n","      <th>400</th>\n","      <td>Hyderabad</td>\n","      <td>1/5/2017</td>\n","      <td>May</td>\n","      <td>2017</td>\n","      <td>2266793</td>\n","    </tr>\n","    <tr>\n","      <th>401</th>\n","      <td>Hyderabad</td>\n","      <td>1/6/2017</td>\n","      <td>June</td>\n","      <td>2017</td>\n","      <td>2007060</td>\n","    </tr>\n","    <tr>\n","      <th>402</th>\n","      <td>Hyderabad</td>\n","      <td>1/7/2017</td>\n","      <td>July</td>\n","      <td>2017</td>\n","      <td>1890870</td>\n","    </tr>\n","    <tr>\n","      <th>403</th>\n","      <td>Hyderabad</td>\n","      <td>1/8/2017</td>\n","      <td>August</td>\n","      <td>2017</td>\n","      <td>1976980</td>\n","    </tr>\n","    <tr>\n","      <th>404</th>\n","      <td>Hyderabad</td>\n","      <td>1/9/2017</td>\n","      <td>September</td>\n","      <td>2017</td>\n","      <td>2011280</td>\n","    </tr>\n","    <tr>\n","      <th>405</th>\n","      <td>Hyderabad</td>\n","      <td>1/10/2017</td>\n","      <td>October</td>\n","      <td>2017</td>\n","      <td>2202316</td>\n","    </tr>\n","    <tr>\n","      <th>406</th>\n","      <td>Hyderabad</td>\n","      <td>1/11/2017</td>\n","      <td>November</td>\n","      <td>2017</td>\n","      <td>1971438</td>\n","    </tr>\n","    <tr>\n","      <th>407</th>\n","      <td>Hyderabad</td>\n","      <td>1/12/2017</td>\n","      <td>December</td>\n","      <td>2017</td>\n","      <td>4871416</td>\n","    </tr>\n","    <tr>\n","      <th>768</th>\n","      <td>Hyderabad</td>\n","      <td>1/1/2018</td>\n","      <td>January</td>\n","      <td>2018</td>\n","      <td>1978396</td>\n","    </tr>\n","    <tr>\n","      <th>769</th>\n","      <td>Hyderabad</td>\n","      <td>1/2/2018</td>\n","      <td>February</td>\n","      <td>2018</td>\n","      <td>1365837</td>\n","    </tr>\n","    <tr>\n","      <th>770</th>\n","      <td>Hyderabad</td>\n","      <td>1/3/2018</td>\n","      <td>March</td>\n","      <td>2018</td>\n","      <td>1415938</td>\n","    </tr>\n","    <tr>\n","      <th>771</th>\n","      <td>Hyderabad</td>\n","      <td>1/4/2018</td>\n","      <td>April</td>\n","      <td>2018</td>\n","      <td>1586375</td>\n","    </tr>\n","    <tr>\n","      <th>772</th>\n","      <td>Hyderabad</td>\n","      <td>1/5/2018</td>\n","      <td>May</td>\n","      <td>2018</td>\n","      <td>1189492</td>\n","    </tr>\n","    <tr>\n","      <th>773</th>\n","      <td>Hyderabad</td>\n","      <td>1/6/2018</td>\n","      <td>June</td>\n","      <td>2018</td>\n","      <td>1595067</td>\n","    </tr>\n","    <tr>\n","      <th>774</th>\n","      <td>Hyderabad</td>\n","      <td>1/7/2018</td>\n","      <td>July</td>\n","      <td>2018</td>\n","      <td>1470042</td>\n","    </tr>\n","    <tr>\n","      <th>775</th>\n","      <td>Hyderabad</td>\n","      <td>1/8/2018</td>\n","      <td>August</td>\n","      <td>2018</td>\n","      <td>1591470</td>\n","    </tr>\n","    <tr>\n","      <th>776</th>\n","      <td>Hyderabad</td>\n","      <td>1/9/2018</td>\n","      <td>September</td>\n","      <td>2018</td>\n","      <td>1508086</td>\n","    </tr>\n","    <tr>\n","      <th>777</th>\n","      <td>Hyderabad</td>\n","      <td>1/10/2018</td>\n","      <td>October</td>\n","      <td>2018</td>\n","      <td>2207478</td>\n","    </tr>\n","    <tr>\n","      <th>778</th>\n","      <td>Hyderabad</td>\n","      <td>1/11/2018</td>\n","      <td>November</td>\n","      <td>2018</td>\n","      <td>1671320</td>\n","    </tr>\n","    <tr>\n","      <th>779</th>\n","      <td>Hyderabad</td>\n","      <td>1/12/2018</td>\n","      <td>December</td>\n","      <td>2018</td>\n","      <td>1964150</td>\n","    </tr>\n","    <tr>\n","      <th>1140</th>\n","      <td>Hyderabad</td>\n","      <td>1/1/2019</td>\n","      <td>January</td>\n","      <td>2019</td>\n","      <td>1426500</td>\n","    </tr>\n","    <tr>\n","      <th>1141</th>\n","      <td>Hyderabad</td>\n","      <td>1/2/2019</td>\n","      <td>February</td>\n","      <td>2019</td>\n","      <td>983147</td>\n","    </tr>\n","    <tr>\n","      <th>1142</th>\n","      <td>Hyderabad</td>\n","      <td>1/3/2019</td>\n","      <td>March</td>\n","      <td>2019</td>\n","      <td>1009991</td>\n","    </tr>\n","    <tr>\n","      <th>1143</th>\n","      <td>Hyderabad</td>\n","      <td>1/4/2019</td>\n","      <td>April</td>\n","      <td>2019</td>\n","      <td>1045933</td>\n","    </tr>\n","    <tr>\n","      <th>1144</th>\n","      <td>Hyderabad</td>\n","      <td>1/5/2019</td>\n","      <td>May</td>\n","      <td>2019</td>\n","      <td>1305748</td>\n","    </tr>\n","    <tr>\n","      <th>1145</th>\n","      <td>Hyderabad</td>\n","      <td>1/6/2019</td>\n","      <td>June</td>\n","      <td>2019</td>\n","      <td>1262995</td>\n","    </tr>\n","    <tr>\n","      <th>1146</th>\n","      <td>Hyderabad</td>\n","      <td>1/7/2019</td>\n","      <td>July</td>\n","      <td>2019</td>\n","      <td>1094861</td>\n","    </tr>\n","    <tr>\n","      <th>1147</th>\n","      <td>Hyderabad</td>\n","      <td>1/8/2019</td>\n","      <td>August</td>\n","      <td>2019</td>\n","      <td>1121380</td>\n","    </tr>\n","    <tr>\n","      <th>1148</th>\n","      <td>Hyderabad</td>\n","      <td>1/9/2019</td>\n","      <td>September</td>\n","      <td>2019</td>\n","      <td>959930</td>\n","    </tr>\n","    <tr>\n","      <th>1149</th>\n","      <td>Hyderabad</td>\n","      <td>1/10/2019</td>\n","      <td>October</td>\n","      <td>2019</td>\n","      <td>1240643</td>\n","    </tr>\n","    <tr>\n","      <th>1150</th>\n","      <td>Hyderabad</td>\n","      <td>1/11/2019</td>\n","      <td>November</td>\n","      <td>2019</td>\n","      <td>1073665</td>\n","    </tr>\n","    <tr>\n","      <th>1151</th>\n","      <td>Hyderabad</td>\n","      <td>1/12/2019</td>\n","      <td>December</td>\n","      <td>2019</td>\n","      <td>1277569</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a199099c-a125-42f2-b799-a487a6e96f6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a199099c-a125-42f2-b799-a487a6e96f6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a199099c-a125-42f2-b799-a487a6e96f6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c6b88f4c-c72e-4378-8e87-7ac339d87d62\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6b88f4c-c72e-4378-8e87-7ac339d87d62')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c6b88f4c-c72e-4378-8e87-7ac339d87d62 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8a65dc22-96ea-437a-a825-f80281a7d804\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dom_hyd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8a65dc22-96ea-437a-a825-f80281a7d804 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dom_hyd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["dom_hyd.groupby(\"month\")[\"visitors\"].sum().sort_values(ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AC6hD-3RIBnq","executionInfo":{"status":"ok","timestamp":1702965005959,"user_tz":480,"elapsed":72,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"f08882ad-9a3e-4763-8667-037b3fccabad"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["month\n","June        16897783\n","December     9338637\n","October      6552397\n","January      6452101\n","April        6126839\n","Name: visitors, dtype: int64"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["dom_hyd.groupby(\"month\")[\"visitors\"].sum().sort_values(ascending=False).head().plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"TTB3OWOCIfvZ","executionInfo":{"status":"ok","timestamp":1702965005959,"user_tz":480,"elapsed":65,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"b8ec0620-c54c-4f47-f080-01598997d30b"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='month'>"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dom_hyd.groupby(\"month\")[\"visitors\"].sum().sort_values(ascending=False).tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S53dZFgbJkT9","executionInfo":{"status":"ok","timestamp":1702965005959,"user_tz":480,"elapsed":51,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"fd60f210-2be2-4508-abad-516965242bb0"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["month\n","November     5626156\n","July         5552527\n","September    5312283\n","March        5227626\n","February     5014430\n","Name: visitors, dtype: int64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["dom_hyd.groupby(\"month\")[\"visitors\"].sum().sort_values(ascending=False).tail().plot(kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":544},"id":"RJxME4rkJsg8","executionInfo":{"status":"ok","timestamp":1702965005960,"user_tz":480,"elapsed":47,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"ed66480a-5d86-4494-f62e-94693d633a62"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='month'>"]},"metadata":{},"execution_count":81},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"CYeskyIFKXXm","executionInfo":{"status":"ok","timestamp":1702965005960,"user_tz":480,"elapsed":40,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"9551dd23-13e4-4327-851c-97303588175a"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          foreign_visit  domestic_visit\n","district                                               \n","Adilabad                             32       7321575.0\n","Bhadradri Kothagudem                  0      21600962.0\n","Hyderabad                       1044898      83900960.0\n","Jagtial                               0      11303514.0\n","Jangaon                               2        826280.0\n","Jayashankar Bhoopalpally           1252      19632865.0\n","Jogulamba Gadwal                    945       6813340.0\n","Kamareddy                             0          1773.0\n","Karimnagar                            0       9462383.0\n","Khammam                               0       9378315.0\n","Komaram Bheem Asifabad                0         92734.0\n","Mahabubabad                           0        600697.0\n","Mahbubnagar                        2282      17180118.0\n","Mancherial                           10        867242.0\n","Medak                                 0      20542639.0\n","Medchal                               0             0.0\n","Mulugu                              575       1819800.0\n","Nagarkurnool                        761       7424355.0\n","Nalgonda                              0       6401933.0\n","Narayanpet                            5             0.0\n","Nirmal                                2      13315796.0\n","Nizamabad                             5        116147.0\n","Peddapalli                            0         56977.0\n","Rajanna Sircilla                      0      41763276.0\n","Ranga Reddy                           0             0.0\n","Sangareddy                            0      10424510.0\n","Siddipet                              0       5775285.0\n","Suryapet                              0             0.0\n","Vikarabad                             0             0.0\n","Wanaparthy                            0        890078.0\n","Warangal (Rural)                    306        819162.0\n","Warangal (Urban)                   8821      30726603.0\n","Yadadri Bhongir                       0      26893080.0"],"text/html":["\n","  <div id=\"df-6548a6a6-5f35-447c-a7c0-0f6be0bee020\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","    </tr>\n","    <tr>\n","      <th>district</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Adilabad</th>\n","      <td>32</td>\n","      <td>7321575.0</td>\n","    </tr>\n","    <tr>\n","      <th>Bhadradri Kothagudem</th>\n","      <td>0</td>\n","      <td>21600962.0</td>\n","    </tr>\n","    <tr>\n","      <th>Hyderabad</th>\n","      <td>1044898</td>\n","      <td>83900960.0</td>\n","    </tr>\n","    <tr>\n","      <th>Jagtial</th>\n","      <td>0</td>\n","      <td>11303514.0</td>\n","    </tr>\n","    <tr>\n","      <th>Jangaon</th>\n","      <td>2</td>\n","      <td>826280.0</td>\n","    </tr>\n","    <tr>\n","      <th>Jayashankar Bhoopalpally</th>\n","      <td>1252</td>\n","      <td>19632865.0</td>\n","    </tr>\n","    <tr>\n","      <th>Jogulamba Gadwal</th>\n","      <td>945</td>\n","      <td>6813340.0</td>\n","    </tr>\n","    <tr>\n","      <th>Kamareddy</th>\n","      <td>0</td>\n","      <td>1773.0</td>\n","    </tr>\n","    <tr>\n","      <th>Karimnagar</th>\n","      <td>0</td>\n","      <td>9462383.0</td>\n","    </tr>\n","    <tr>\n","      <th>Khammam</th>\n","      <td>0</td>\n","      <td>9378315.0</td>\n","    </tr>\n","    <tr>\n","      <th>Komaram Bheem Asifabad</th>\n","      <td>0</td>\n","      <td>92734.0</td>\n","    </tr>\n","    <tr>\n","      <th>Mahabubabad</th>\n","      <td>0</td>\n","      <td>600697.0</td>\n","    </tr>\n","    <tr>\n","      <th>Mahbubnagar</th>\n","      <td>2282</td>\n","      <td>17180118.0</td>\n","    </tr>\n","    <tr>\n","      <th>Mancherial</th>\n","      <td>10</td>\n","      <td>867242.0</td>\n","    </tr>\n","    <tr>\n","      <th>Medak</th>\n","      <td>0</td>\n","      <td>20542639.0</td>\n","    </tr>\n","    <tr>\n","      <th>Medchal</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Mulugu</th>\n","      <td>575</td>\n","      <td>1819800.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nagarkurnool</th>\n","      <td>761</td>\n","      <td>7424355.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nalgonda</th>\n","      <td>0</td>\n","      <td>6401933.0</td>\n","    </tr>\n","    <tr>\n","      <th>Narayanpet</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nirmal</th>\n","      <td>2</td>\n","      <td>13315796.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nizamabad</th>\n","      <td>5</td>\n","      <td>116147.0</td>\n","    </tr>\n","    <tr>\n","      <th>Peddapalli</th>\n","      <td>0</td>\n","      <td>56977.0</td>\n","    </tr>\n","    <tr>\n","      <th>Rajanna Sircilla</th>\n","      <td>0</td>\n","      <td>41763276.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ranga Reddy</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sangareddy</th>\n","      <td>0</td>\n","      <td>10424510.0</td>\n","    </tr>\n","    <tr>\n","      <th>Siddipet</th>\n","      <td>0</td>\n","      <td>5775285.0</td>\n","    </tr>\n","    <tr>\n","      <th>Suryapet</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Vikarabad</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Wanaparthy</th>\n","      <td>0</td>\n","      <td>890078.0</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Rural)</th>\n","      <td>306</td>\n","      <td>819162.0</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Urban)</th>\n","      <td>8821</td>\n","      <td>30726603.0</td>\n","    </tr>\n","    <tr>\n","      <th>Yadadri Bhongir</th>\n","      <td>0</td>\n","      <td>26893080.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6548a6a6-5f35-447c-a7c0-0f6be0bee020')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6548a6a6-5f35-447c-a7c0-0f6be0bee020 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6548a6a6-5f35-447c-a7c0-0f6be0bee020');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da7a4e7b-2fd6-4346-9745-f99bcd0d1874\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da7a4e7b-2fd6-4346-9745-f99bcd0d1874')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da7a4e7b-2fd6-4346-9745-f99bcd0d1874 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5a025b09-eeda-4b5e-b2db-7cf994fb78df\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5a025b09-eeda-4b5e-b2db-7cf994fb78df button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oiS7N9KwKa-C","executionInfo":{"status":"ok","timestamp":1702965005960,"user_tz":480,"elapsed":38,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"1ee560e1-e3cf-48ba-aa2d-04514a5bfefc"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(33, 2)"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["ratios = []\n","for i in range(33):\n","  ratio = df.iloc[i,1]/df.iloc[i,0]\n","  ratios.append(ratio)\n","df[\"Ratio\"]=ratios"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oi6o3uf0KfMV","executionInfo":{"status":"ok","timestamp":1702965005961,"user_tz":480,"elapsed":34,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"d42e9c1e-e1a4-4c97-8a45-d01442c8116b"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-84-a1942011b61f>:3: RuntimeWarning: divide by zero encountered in double_scalars\n","  ratio = df.iloc[i,1]/df.iloc[i,0]\n","<ipython-input-84-a1942011b61f>:3: RuntimeWarning: invalid value encountered in double_scalars\n","  ratio = df.iloc[i,1]/df.iloc[i,0]\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"WSPauieSLFHr","executionInfo":{"status":"ok","timestamp":1702965007470,"user_tz":480,"elapsed":1536,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"3e1ccd02-4974-40a2-8138-ba5664a0ab0c"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          foreign_visit  domestic_visit         Ratio\n","district                                                             \n","Adilabad                             32       7321575.0  2.287992e+05\n","Bhadradri Kothagudem                  0      21600962.0           inf\n","Hyderabad                       1044898      83900960.0  8.029584e+01\n","Jagtial                               0      11303514.0           inf\n","Jangaon                               2        826280.0  4.131400e+05\n","Jayashankar Bhoopalpally           1252      19632865.0  1.568120e+04\n","Jogulamba Gadwal                    945       6813340.0  7.209884e+03\n","Kamareddy                             0          1773.0           inf\n","Karimnagar                            0       9462383.0           inf\n","Khammam                               0       9378315.0           inf\n","Komaram Bheem Asifabad                0         92734.0           inf\n","Mahabubabad                           0        600697.0           inf\n","Mahbubnagar                        2282      17180118.0  7.528535e+03\n","Mancherial                           10        867242.0  8.672420e+04\n","Medak                                 0      20542639.0           inf\n","Medchal                               0             0.0           NaN\n","Mulugu                              575       1819800.0  3.164870e+03\n","Nagarkurnool                        761       7424355.0  9.756051e+03\n","Nalgonda                              0       6401933.0           inf\n","Narayanpet                            5             0.0  0.000000e+00\n","Nirmal                                2      13315796.0  6.657898e+06\n","Nizamabad                             5        116147.0  2.322940e+04\n","Peddapalli                            0         56977.0           inf\n","Rajanna Sircilla                      0      41763276.0           inf\n","Ranga Reddy                           0             0.0           NaN\n","Sangareddy                            0      10424510.0           inf\n","Siddipet                              0       5775285.0           inf\n","Suryapet                              0             0.0           NaN\n","Vikarabad                             0             0.0           NaN\n","Wanaparthy                            0        890078.0           inf\n","Warangal (Rural)                    306        819162.0  2.677000e+03\n","Warangal (Urban)                   8821      30726603.0  3.483347e+03\n","Yadadri Bhongir                       0      26893080.0           inf"],"text/html":["\n","  <div id=\"df-f7ea499e-cebc-402e-8eee-17f2e84537f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","      <th>Ratio</th>\n","    </tr>\n","    <tr>\n","      <th>district</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Adilabad</th>\n","      <td>32</td>\n","      <td>7321575.0</td>\n","      <td>2.287992e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Bhadradri Kothagudem</th>\n","      <td>0</td>\n","      <td>21600962.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Hyderabad</th>\n","      <td>1044898</td>\n","      <td>83900960.0</td>\n","      <td>8.029584e+01</td>\n","    </tr>\n","    <tr>\n","      <th>Jagtial</th>\n","      <td>0</td>\n","      <td>11303514.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Jangaon</th>\n","      <td>2</td>\n","      <td>826280.0</td>\n","      <td>4.131400e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Jayashankar Bhoopalpally</th>\n","      <td>1252</td>\n","      <td>19632865.0</td>\n","      <td>1.568120e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Jogulamba Gadwal</th>\n","      <td>945</td>\n","      <td>6813340.0</td>\n","      <td>7.209884e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Kamareddy</th>\n","      <td>0</td>\n","      <td>1773.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Karimnagar</th>\n","      <td>0</td>\n","      <td>9462383.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Khammam</th>\n","      <td>0</td>\n","      <td>9378315.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Komaram Bheem Asifabad</th>\n","      <td>0</td>\n","      <td>92734.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Mahabubabad</th>\n","      <td>0</td>\n","      <td>600697.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Mahbubnagar</th>\n","      <td>2282</td>\n","      <td>17180118.0</td>\n","      <td>7.528535e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Mancherial</th>\n","      <td>10</td>\n","      <td>867242.0</td>\n","      <td>8.672420e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Medak</th>\n","      <td>0</td>\n","      <td>20542639.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Medchal</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Mulugu</th>\n","      <td>575</td>\n","      <td>1819800.0</td>\n","      <td>3.164870e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Nagarkurnool</th>\n","      <td>761</td>\n","      <td>7424355.0</td>\n","      <td>9.756051e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Nalgonda</th>\n","      <td>0</td>\n","      <td>6401933.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Narayanpet</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Nirmal</th>\n","      <td>2</td>\n","      <td>13315796.0</td>\n","      <td>6.657898e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Nizamabad</th>\n","      <td>5</td>\n","      <td>116147.0</td>\n","      <td>2.322940e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Peddapalli</th>\n","      <td>0</td>\n","      <td>56977.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Rajanna Sircilla</th>\n","      <td>0</td>\n","      <td>41763276.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Ranga Reddy</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Sangareddy</th>\n","      <td>0</td>\n","      <td>10424510.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Siddipet</th>\n","      <td>0</td>\n","      <td>5775285.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Suryapet</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Vikarabad</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Wanaparthy</th>\n","      <td>0</td>\n","      <td>890078.0</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Rural)</th>\n","      <td>306</td>\n","      <td>819162.0</td>\n","      <td>2.677000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Urban)</th>\n","      <td>8821</td>\n","      <td>30726603.0</td>\n","      <td>3.483347e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Yadadri Bhongir</th>\n","      <td>0</td>\n","      <td>26893080.0</td>\n","      <td>inf</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7ea499e-cebc-402e-8eee-17f2e84537f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7ea499e-cebc-402e-8eee-17f2e84537f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7ea499e-cebc-402e-8eee-17f2e84537f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c4c74700-8b54-47a8-a82e-7129d85759ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4c74700-8b54-47a8-a82e-7129d85759ae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c4c74700-8b54-47a8-a82e-7129d85759ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_710a8972-238d-4c1a-b46d-2d6a6e0d764e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_710a8972-238d-4c1a-b46d-2d6a6e0d764e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["df = df.replace([np.nan,np.inf],0)"],"metadata":{"id":"CXXkWJgMLI58","executionInfo":{"status":"ok","timestamp":1702965007471,"user_tz":480,"elapsed":84,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_QTLLkHGLR-I","executionInfo":{"status":"ok","timestamp":1702965007472,"user_tz":480,"elapsed":85,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"83e4e0ac-bee2-4ce8-acd0-874b4b886248"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          foreign_visit  domestic_visit         Ratio\n","district                                                             \n","Adilabad                             32       7321575.0  2.287992e+05\n","Bhadradri Kothagudem                  0      21600962.0  0.000000e+00\n","Hyderabad                       1044898      83900960.0  8.029584e+01\n","Jagtial                               0      11303514.0  0.000000e+00\n","Jangaon                               2        826280.0  4.131400e+05\n","Jayashankar Bhoopalpally           1252      19632865.0  1.568120e+04\n","Jogulamba Gadwal                    945       6813340.0  7.209884e+03\n","Kamareddy                             0          1773.0  0.000000e+00\n","Karimnagar                            0       9462383.0  0.000000e+00\n","Khammam                               0       9378315.0  0.000000e+00\n","Komaram Bheem Asifabad                0         92734.0  0.000000e+00\n","Mahabubabad                           0        600697.0  0.000000e+00\n","Mahbubnagar                        2282      17180118.0  7.528535e+03\n","Mancherial                           10        867242.0  8.672420e+04\n","Medak                                 0      20542639.0  0.000000e+00\n","Medchal                               0             0.0  0.000000e+00\n","Mulugu                              575       1819800.0  3.164870e+03\n","Nagarkurnool                        761       7424355.0  9.756051e+03\n","Nalgonda                              0       6401933.0  0.000000e+00\n","Narayanpet                            5             0.0  0.000000e+00\n","Nirmal                                2      13315796.0  6.657898e+06\n","Nizamabad                             5        116147.0  2.322940e+04\n","Peddapalli                            0         56977.0  0.000000e+00\n","Rajanna Sircilla                      0      41763276.0  0.000000e+00\n","Ranga Reddy                           0             0.0  0.000000e+00\n","Sangareddy                            0      10424510.0  0.000000e+00\n","Siddipet                              0       5775285.0  0.000000e+00\n","Suryapet                              0             0.0  0.000000e+00\n","Vikarabad                             0             0.0  0.000000e+00\n","Wanaparthy                            0        890078.0  0.000000e+00\n","Warangal (Rural)                    306        819162.0  2.677000e+03\n","Warangal (Urban)                   8821      30726603.0  3.483347e+03\n","Yadadri Bhongir                       0      26893080.0  0.000000e+00"],"text/html":["\n","  <div id=\"df-505987dc-8e05-46c2-9955-2ac682a487a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","      <th>Ratio</th>\n","    </tr>\n","    <tr>\n","      <th>district</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Adilabad</th>\n","      <td>32</td>\n","      <td>7321575.0</td>\n","      <td>2.287992e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Bhadradri Kothagudem</th>\n","      <td>0</td>\n","      <td>21600962.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Hyderabad</th>\n","      <td>1044898</td>\n","      <td>83900960.0</td>\n","      <td>8.029584e+01</td>\n","    </tr>\n","    <tr>\n","      <th>Jagtial</th>\n","      <td>0</td>\n","      <td>11303514.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Jangaon</th>\n","      <td>2</td>\n","      <td>826280.0</td>\n","      <td>4.131400e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Jayashankar Bhoopalpally</th>\n","      <td>1252</td>\n","      <td>19632865.0</td>\n","      <td>1.568120e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Jogulamba Gadwal</th>\n","      <td>945</td>\n","      <td>6813340.0</td>\n","      <td>7.209884e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Kamareddy</th>\n","      <td>0</td>\n","      <td>1773.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Karimnagar</th>\n","      <td>0</td>\n","      <td>9462383.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Khammam</th>\n","      <td>0</td>\n","      <td>9378315.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Komaram Bheem Asifabad</th>\n","      <td>0</td>\n","      <td>92734.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Mahabubabad</th>\n","      <td>0</td>\n","      <td>600697.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Mahbubnagar</th>\n","      <td>2282</td>\n","      <td>17180118.0</td>\n","      <td>7.528535e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Mancherial</th>\n","      <td>10</td>\n","      <td>867242.0</td>\n","      <td>8.672420e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Medak</th>\n","      <td>0</td>\n","      <td>20542639.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Medchal</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Mulugu</th>\n","      <td>575</td>\n","      <td>1819800.0</td>\n","      <td>3.164870e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Nagarkurnool</th>\n","      <td>761</td>\n","      <td>7424355.0</td>\n","      <td>9.756051e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Nalgonda</th>\n","      <td>0</td>\n","      <td>6401933.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Narayanpet</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Nirmal</th>\n","      <td>2</td>\n","      <td>13315796.0</td>\n","      <td>6.657898e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Nizamabad</th>\n","      <td>5</td>\n","      <td>116147.0</td>\n","      <td>2.322940e+04</td>\n","    </tr>\n","    <tr>\n","      <th>Peddapalli</th>\n","      <td>0</td>\n","      <td>56977.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Rajanna Sircilla</th>\n","      <td>0</td>\n","      <td>41763276.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Ranga Reddy</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Sangareddy</th>\n","      <td>0</td>\n","      <td>10424510.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Siddipet</th>\n","      <td>0</td>\n","      <td>5775285.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Suryapet</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Vikarabad</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Wanaparthy</th>\n","      <td>0</td>\n","      <td>890078.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Rural)</th>\n","      <td>306</td>\n","      <td>819162.0</td>\n","      <td>2.677000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Urban)</th>\n","      <td>8821</td>\n","      <td>30726603.0</td>\n","      <td>3.483347e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Yadadri Bhongir</th>\n","      <td>0</td>\n","      <td>26893080.0</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-505987dc-8e05-46c2-9955-2ac682a487a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-505987dc-8e05-46c2-9955-2ac682a487a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-505987dc-8e05-46c2-9955-2ac682a487a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c71dd40-1590-4805-ae62-3f0135a86b7a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c71dd40-1590-4805-ae62-3f0135a86b7a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c71dd40-1590-4805-ae62-3f0135a86b7a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9085fc90-53d9-4c4e-b874-13ccaa21cd7e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9085fc90-53d9-4c4e-b874-13ccaa21cd7e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["df_ratio = df.sort_values(by='Ratio',ascending=False).where(df['foreign_visit']>100)\n","df_ratio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"UhjmexzXLUVN","executionInfo":{"status":"ok","timestamp":1702965007472,"user_tz":480,"elapsed":83,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"0deaa247-b7a8-43af-ba21-6506a991ac96"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          foreign_visit  domestic_visit         Ratio\n","district                                                             \n","Nirmal                              NaN             NaN           NaN\n","Jangaon                             NaN             NaN           NaN\n","Adilabad                            NaN             NaN           NaN\n","Mancherial                          NaN             NaN           NaN\n","Nizamabad                           NaN             NaN           NaN\n","Jayashankar Bhoopalpally         1252.0      19632865.0  15681.202077\n","Nagarkurnool                      761.0       7424355.0   9756.051248\n","Mahbubnagar                      2282.0      17180118.0   7528.535495\n","Jogulamba Gadwal                  945.0       6813340.0   7209.883598\n","Warangal (Urban)                 8821.0      30726603.0   3483.346899\n","Mulugu                            575.0       1819800.0   3164.869565\n","Warangal (Rural)                  306.0        819162.0   2677.000000\n","Hyderabad                     1044898.0      83900960.0     80.295837\n","Mahabubabad                         NaN             NaN           NaN\n","Komaram Bheem Asifabad              NaN             NaN           NaN\n","Wanaparthy                          NaN             NaN           NaN\n","Vikarabad                           NaN             NaN           NaN\n","Suryapet                            NaN             NaN           NaN\n","Siddipet                            NaN             NaN           NaN\n","Sangareddy                          NaN             NaN           NaN\n","Ranga Reddy                         NaN             NaN           NaN\n","Rajanna Sircilla                    NaN             NaN           NaN\n","Peddapalli                          NaN             NaN           NaN\n","Jagtial                             NaN             NaN           NaN\n","Kamareddy                           NaN             NaN           NaN\n","Narayanpet                          NaN             NaN           NaN\n","Nalgonda                            NaN             NaN           NaN\n","Karimnagar                          NaN             NaN           NaN\n","Bhadradri Kothagudem                NaN             NaN           NaN\n","Medchal                             NaN             NaN           NaN\n","Medak                               NaN             NaN           NaN\n","Khammam                             NaN             NaN           NaN\n","Yadadri Bhongir                     NaN             NaN           NaN"],"text/html":["\n","  <div id=\"df-4da5bd23-23cf-4968-b1cc-5c56ebb6f5f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","      <th>Ratio</th>\n","    </tr>\n","    <tr>\n","      <th>district</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Nirmal</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jangaon</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Adilabad</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Mancherial</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Nizamabad</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jayashankar Bhoopalpally</th>\n","      <td>1252.0</td>\n","      <td>19632865.0</td>\n","      <td>15681.202077</td>\n","    </tr>\n","    <tr>\n","      <th>Nagarkurnool</th>\n","      <td>761.0</td>\n","      <td>7424355.0</td>\n","      <td>9756.051248</td>\n","    </tr>\n","    <tr>\n","      <th>Mahbubnagar</th>\n","      <td>2282.0</td>\n","      <td>17180118.0</td>\n","      <td>7528.535495</td>\n","    </tr>\n","    <tr>\n","      <th>Jogulamba Gadwal</th>\n","      <td>945.0</td>\n","      <td>6813340.0</td>\n","      <td>7209.883598</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Urban)</th>\n","      <td>8821.0</td>\n","      <td>30726603.0</td>\n","      <td>3483.346899</td>\n","    </tr>\n","    <tr>\n","      <th>Mulugu</th>\n","      <td>575.0</td>\n","      <td>1819800.0</td>\n","      <td>3164.869565</td>\n","    </tr>\n","    <tr>\n","      <th>Warangal (Rural)</th>\n","      <td>306.0</td>\n","      <td>819162.0</td>\n","      <td>2677.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Hyderabad</th>\n","      <td>1044898.0</td>\n","      <td>83900960.0</td>\n","      <td>80.295837</td>\n","    </tr>\n","    <tr>\n","      <th>Mahabubabad</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Komaram Bheem Asifabad</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Wanaparthy</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Vikarabad</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Suryapet</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Siddipet</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Sangareddy</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Ranga Reddy</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rajanna Sircilla</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Peddapalli</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jagtial</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Kamareddy</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Narayanpet</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Nalgonda</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Karimnagar</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Bhadradri Kothagudem</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Medchal</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Medak</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Khammam</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Yadadri Bhongir</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4da5bd23-23cf-4968-b1cc-5c56ebb6f5f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4da5bd23-23cf-4968-b1cc-5c56ebb6f5f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4da5bd23-23cf-4968-b1cc-5c56ebb6f5f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b63b6e0e-dfd8-4c0d-9b57-0f1593d3e290\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b63b6e0e-dfd8-4c0d-9b57-0f1593d3e290')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b63b6e0e-dfd8-4c0d-9b57-0f1593d3e290 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_606c212d-b351-4cb7-8103-380eb1195047\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ratio')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_606c212d-b351-4cb7-8103-380eb1195047 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ratio');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["df_ratio = df_ratio.dropna()"],"metadata":{"id":"wo1GWiXILvtO","executionInfo":{"status":"ok","timestamp":1702965007473,"user_tz":480,"elapsed":83,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["df_ratio.sort_values(by='Ratio',ascending=True,inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gwhFTIdhL34o","executionInfo":{"status":"ok","timestamp":1702965007473,"user_tz":480,"elapsed":82,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"aa5b0fb0-bc2d-425a-edb6-77123417acc3"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-90-f7b7e9ce7ca1>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_ratio.sort_values(by='Ratio',ascending=True,inplace=True)\n"]}]},{"cell_type":"code","source":["df_ratio = df_ratio.reset_index()"],"metadata":{"id":"yQkgT-VsMD2y","executionInfo":{"status":"ok","timestamp":1702965007474,"user_tz":480,"elapsed":79,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["df_ratio.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gaWfXDmjMNQn","executionInfo":{"status":"ok","timestamp":1702965007474,"user_tz":480,"elapsed":78,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"7a51e73f-c886-442c-f838-65a68c030a64"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            district  foreign_visit  domestic_visit        Ratio\n","0          Hyderabad      1044898.0      83900960.0    80.295837\n","1   Warangal (Rural)          306.0        819162.0  2677.000000\n","2             Mulugu          575.0       1819800.0  3164.869565\n","3   Warangal (Urban)         8821.0      30726603.0  3483.346899\n","4  Jogulamba Gadwal           945.0       6813340.0  7209.883598"],"text/html":["\n","  <div id=\"df-9bd5a1d9-4369-41af-b6f7-f35cb61f92b4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","      <th>Ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Hyderabad</td>\n","      <td>1044898.0</td>\n","      <td>83900960.0</td>\n","      <td>80.295837</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Warangal (Rural)</td>\n","      <td>306.0</td>\n","      <td>819162.0</td>\n","      <td>2677.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mulugu</td>\n","      <td>575.0</td>\n","      <td>1819800.0</td>\n","      <td>3164.869565</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Warangal (Urban)</td>\n","      <td>8821.0</td>\n","      <td>30726603.0</td>\n","      <td>3483.346899</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jogulamba Gadwal</td>\n","      <td>945.0</td>\n","      <td>6813340.0</td>\n","      <td>7209.883598</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bd5a1d9-4369-41af-b6f7-f35cb61f92b4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9bd5a1d9-4369-41af-b6f7-f35cb61f92b4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9bd5a1d9-4369-41af-b6f7-f35cb61f92b4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a11e0fca-8640-4ac1-95b8-e2a03c541c06\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a11e0fca-8640-4ac1-95b8-e2a03c541c06')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a11e0fca-8640-4ac1-95b8-e2a03c541c06 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["df_ratio.head().plot(\"district\",\"Ratio\",kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":587},"id":"il14KSrXPX5v","executionInfo":{"status":"ok","timestamp":1702965007474,"user_tz":480,"elapsed":74,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"d58c08eb-ed4a-444b-b32c-6aebd13ea845"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":93},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_ratio.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dRUmcR90d7Y7","executionInfo":{"status":"ok","timestamp":1702965007475,"user_tz":480,"elapsed":68,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"928b5997-ccbc-48da-b395-2df36ced7e80"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   district  foreign_visit  domestic_visit         Ratio\n","3          Warangal (Urban)         8821.0      30726603.0   3483.346899\n","4         Jogulamba Gadwal           945.0       6813340.0   7209.883598\n","5               Mahbubnagar         2282.0      17180118.0   7528.535495\n","6             Nagarkurnool           761.0       7424355.0   9756.051248\n","7  Jayashankar Bhoopalpally         1252.0      19632865.0  15681.202077"],"text/html":["\n","  <div id=\"df-68918bf5-e67f-40d2-b78a-703b07064b0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>foreign_visit</th>\n","      <th>domestic_visit</th>\n","      <th>Ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Warangal (Urban)</td>\n","      <td>8821.0</td>\n","      <td>30726603.0</td>\n","      <td>3483.346899</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jogulamba Gadwal</td>\n","      <td>945.0</td>\n","      <td>6813340.0</td>\n","      <td>7209.883598</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Mahbubnagar</td>\n","      <td>2282.0</td>\n","      <td>17180118.0</td>\n","      <td>7528.535495</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Nagarkurnool</td>\n","      <td>761.0</td>\n","      <td>7424355.0</td>\n","      <td>9756.051248</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Jayashankar Bhoopalpally</td>\n","      <td>1252.0</td>\n","      <td>19632865.0</td>\n","      <td>15681.202077</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68918bf5-e67f-40d2-b78a-703b07064b0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-68918bf5-e67f-40d2-b78a-703b07064b0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-68918bf5-e67f-40d2-b78a-703b07064b0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-497975b1-67da-4e6c-9b07-9849dd5b06ab\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-497975b1-67da-4e6c-9b07-9849dd5b06ab')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-497975b1-67da-4e6c-9b07-9849dd5b06ab button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["df_ratio.tail().plot(\"district\",\"Ratio\",kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":632},"id":"0ISOUNc2eOzC","executionInfo":{"status":"ok","timestamp":1702965007475,"user_tz":480,"elapsed":66,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"ad42c231-f86f-481f-8f25-3c01e954030b"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='district'>"]},"metadata":{},"execution_count":95},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_ratio.to_csv('df_ratio.csv')"],"metadata":{"id":"HJHKFfkGedP5","executionInfo":{"status":"ok","timestamp":1702965007476,"user_tz":480,"elapsed":61,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["df_ratio.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lhK673vweoU9","executionInfo":{"status":"ok","timestamp":1702965007476,"user_tz":480,"elapsed":61,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"bb24b99d-9a77-4124-b65f-c6895e36c78b"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8, 4)"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["# prompt: Using dataframe dom: list the top & bottom 5 districts based on 'population to tourist footfall ratio' ratio in 2019?(ratio*=Total visitor/Total Residents Population in given year)\n","\n","# Calculate the population to tourist footfall ratio for each district in 2019.\n","dom['Ratio'] = dom['2019'] / dom['2016']\n","\n","# Sort the districts by their population to tourist footfall ratio in descending order.\n","dom = dom.sort_values('Ratio', ascending=False)\n","\n","# Print the top 5 districts.\n","print(dom.head())\n","\n","# Print the bottom 5 districts.\n","print(dom.tail())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HPjWaXfpery9","executionInfo":{"status":"ok","timestamp":1702965007476,"user_tz":480,"elapsed":58,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"7f9028b5-4869-4f18-c9a3-cfc5bbf12a7f"},"execution_count":98,"outputs":[{"output_type":"stream","name":"stdout","text":["                  district   2016     2019      CAGR      Ratio\n","32             Narayanapet      0   389250  0.000000        inf\n","31                  Mulugu      0  1819800  0.000000        inf\n","10  Komaram Bheem Asifabad      0    19189  0.000000        inf\n","13              Mancherial   7802   269810  2.257997  34.582158\n","28        Warangal (Rural)  19400   353500  1.631455  18.221649\n","       district     2016   2019      CAGR     Ratio\n","8   Karimnagar   9167468  77491 -0.796296  0.008453\n","15     Medchal         0      0  0.000000       NaN\n","22  Ranga Reddy        0      0  0.000000       NaN\n","25     Suryapet        0      0  0.000000       NaN\n","26    Vikarabad        0      0  0.000000       NaN\n"]}]},{"cell_type":"code","source":["dom.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"qqj2dofwiC--","executionInfo":{"status":"ok","timestamp":1702965007477,"user_tz":480,"elapsed":56,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"fb017b52-f5c2-4894-bf28-2662a73404f6"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  district   2016     2019      CAGR      Ratio\n","32             Narayanapet      0   389250  0.000000        inf\n","31                  Mulugu      0  1819800  0.000000        inf\n","10  Komaram Bheem Asifabad      0    19189  0.000000        inf\n","13              Mancherial   7802   269810  2.257997  34.582158\n","28        Warangal (Rural)  19400   353500  1.631455  18.221649"],"text/html":["\n","  <div id=\"df-10d25b47-e996-402e-8021-d6159ede0475\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","      <th>Ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>Narayanapet</td>\n","      <td>0</td>\n","      <td>389250</td>\n","      <td>0.000000</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Mulugu</td>\n","      <td>0</td>\n","      <td>1819800</td>\n","      <td>0.000000</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Komaram Bheem Asifabad</td>\n","      <td>0</td>\n","      <td>19189</td>\n","      <td>0.000000</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Mancherial</td>\n","      <td>7802</td>\n","      <td>269810</td>\n","      <td>2.257997</td>\n","      <td>34.582158</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Warangal (Rural)</td>\n","      <td>19400</td>\n","      <td>353500</td>\n","      <td>1.631455</td>\n","      <td>18.221649</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10d25b47-e996-402e-8021-d6159ede0475')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10d25b47-e996-402e-8021-d6159ede0475 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10d25b47-e996-402e-8021-d6159ede0475');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9afb7d3d-9720-4383-8478-a3a13707bfc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9afb7d3d-9720-4383-8478-a3a13707bfc0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9afb7d3d-9720-4383-8478-a3a13707bfc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["dom.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"11AhY2eOiLmR","executionInfo":{"status":"ok","timestamp":1702965007477,"user_tz":480,"elapsed":53,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"a56ebfbd-95b4-4a6e-8010-a84f80f51165"},"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       district     2016   2019      CAGR     Ratio\n","8   Karimnagar   9167468  77491 -0.796296  0.008453\n","15     Medchal         0      0  0.000000       NaN\n","22  Ranga Reddy        0      0  0.000000       NaN\n","25     Suryapet        0      0  0.000000       NaN\n","26    Vikarabad        0      0  0.000000       NaN"],"text/html":["\n","  <div id=\"df-8ebc6fda-04a1-4193-ba76-f6c445749190\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>district</th>\n","      <th>2016</th>\n","      <th>2019</th>\n","      <th>CAGR</th>\n","      <th>Ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Karimnagar</td>\n","      <td>9167468</td>\n","      <td>77491</td>\n","      <td>-0.796296</td>\n","      <td>0.008453</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Medchal</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Ranga Reddy</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Suryapet</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Vikarabad</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ebc6fda-04a1-4193-ba76-f6c445749190')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ebc6fda-04a1-4193-ba76-f6c445749190 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ebc6fda-04a1-4193-ba76-f6c445749190');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-734d5fce-ce16-419f-8858-bda4b2da8efa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-734d5fce-ce16-419f-8858-bda4b2da8efa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-734d5fce-ce16-419f-8858-bda4b2da8efa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["# prompt: Using dataframe df: What will be the projected number of domestic and foreign tourists in Hyderabad in 2025 based on the growth rate from previous years?\n","\n","df.loc[df['foreign_visit'].idxmax()]['foreign_visit'] * 1.12 ** (2025 - 2019)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fbs4J7xJigZz","executionInfo":{"status":"ok","timestamp":1702965007478,"user_tz":480,"elapsed":53,"user":{"displayName":"Vekariya Vivek","userId":"14441580918300417113"}},"outputId":"b6f23307-996d-43db-f17b-fbad11a409d2"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2062443.3761033923"]},"metadata":{},"execution_count":101}]}]}